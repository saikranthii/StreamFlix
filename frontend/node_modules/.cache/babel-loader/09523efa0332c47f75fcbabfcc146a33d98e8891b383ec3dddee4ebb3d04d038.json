{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Rajkamal\\\\Desktop\\\\movie_recommender\\\\frontend\\\\src\\\\pages\\\\Home.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport Header from '../components/Header';\nimport Hero from '../components/Hero';\nimport Row from '../components/Row';\nimport Modal from '../components/Modal';\nimport Footer from '../components/Footer';\nimport './Home.css';\nimport kalkiPoster from '../data/Kalki.jpg';\nimport salaarPoster from '../data/salaar.jpg';\nimport chaavaPoster from '../data/chaava.jpg';\nimport rrrPoster from '../data/rrr.jpg';\nimport pushpa2Poster from '../data/pushpa2.jpg';\nimport hiNannaPoster from '../data/hinanna.jpg';\nimport mad2Poster from '../data/mad2.jpg';\nimport courtPoster from '../data/court.jpg';\nimport dragonPoster from '../data/rod.jpg';\nimport saripodaPoster from '../data/ss.jpg';\nimport saahoPoster from '../data/saaho.jpg';\nimport baahubaliPoster from '../data/bb2.jpg';\nimport blackPoster from '../data/black.jpg';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Home() {\n  _s();\n  const [selectedItem, setSelectedItem] = useState(null);\n  const [recommendations, setRecommendations] = useState({});\n  const [initialRows, setInitialRows] = useState([]);\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState(null);\n  const [favorites, setFavorites] = useState(() => JSON.parse(localStorage.getItem('myList') || '[]'));\n\n  // Map static movie titles to local posters\n  const staticMoviesWithLocalPosters = {\n    'Kalki 2898 AD': kalkiPoster,\n    'Salaar: Part 1 – Ceasefire': salaarPoster,\n    Chhaava: chaavaPoster,\n    RRR: rrrPoster,\n    'Pushpa 2: The Rule': pushpa2Poster,\n    'Hi Nanna': hiNannaPoster,\n    Mad2: mad2Poster,\n    Court: courtPoster,\n    'Return of the Dragon': dragonPoster,\n    Saaho: saahoPoster,\n    'Saripodhaa Sanivaaram': saripodaPoster,\n    'Baahubali 2: The Conclusion': baahubaliPoster\n  };\n\n  // Fallback Telugu movies for failed fetches\n  const fallbackTeluguMovies = [{\n    id: 100000,\n    title: 'Baahubali: The Beginning',\n    thumbnail: baahubaliPoster,\n    description: 'Language: te, Genres: Action, Drama, Year: 2015',\n    language: 'te',\n    genres: ['action', 'drama'],\n    release_year: 2015\n  }, {\n    id: 100001,\n    title: 'Baahubali 2: The Conclusion',\n    thumbnail: baahubaliPoster,\n    description: 'Language: te, Genres: Action, Drama, Year: 2017',\n    language: 'te',\n    genres: ['action', 'drama'],\n    release_year: 2017\n  }, {\n    id: 100002,\n    title: '1 - Nenokkadine',\n    thumbnail: blackPoster,\n    description: 'Language: te, Genres: Action, Thriller, Year: 2014',\n    language: 'te',\n    genres: ['action', 'thriller'],\n    release_year: 2014\n  }, {\n    id: 100003,\n    title: 'Dhoom:3',\n    thumbnail: blackPoster,\n    description: 'Language: te, Genres: Action, Thriller, Year: 2013',\n    language: 'te',\n    genres: ['action', 'thriller'],\n    release_year: 2013\n  }];\n\n  // Featured item\n  const featuredItem = {\n    id: 100000,\n    title: 'Baahubali: The Beginning',\n    description: 'A Telugu epic about valor and sacrifice.',\n    thumbnail: baahubaliPoster,\n    language: 'te',\n    genres: ['action', 'drama'],\n    release_year: 2015\n  };\n\n  // Initial rows with static movies\n  const initialRowsData = [{\n    title: 'Trending Movies',\n    items: [{\n      id: 900352,\n      title: 'Kalki 2898 AD',\n      thumbnail: kalkiPoster,\n      description: 'Language: te, Genres: Sci-Fi, Mythology, Action',\n      language: 'te',\n      isStatic: true,\n      genres: ['sci-fi', 'mythology', 'action'],\n      release_year: 'N/A'\n    }, {\n      id: 934632,\n      title: 'Salaar: Part 1 – Ceasefire',\n      thumbnail: salaarPoster,\n      description: 'Language: te, Genres: Action, Drama, Epic',\n      language: 'te',\n      isStatic: true,\n      genres: ['action', 'drama', 'epic'],\n      release_year: 'N/A'\n    }, {\n      id: 0,\n      title: 'Chhaava',\n      thumbnail: chaavaPoster,\n      description: 'Language: hi, Genres: Historical, Action, Drama',\n      language: 'hi',\n      isStatic: true,\n      genres: ['historical', 'action', 'drama'],\n      release_year: 'N/A'\n    }, {\n      id: 614933,\n      title: 'RRR',\n      thumbnail: rrrPoster,\n      description: 'Language: te, Genres: Action, Historical, Drama, Epic',\n      language: 'te',\n      isStatic: true,\n      genres: ['action', 'historical', 'drama', 'epic'],\n      release_year: 'N/A'\n    }, {\n      id: 614934,\n      title: 'Pushpa 2: The Rule',\n      thumbnail: pushpa2Poster,\n      description: 'Language: te, Genres: Action, Drama',\n      language: 'te',\n      isStatic: true,\n      genres: ['action', 'drama'],\n      release_year: 'N/A'\n    }, {\n      id: 1121402,\n      title: 'Hi Nanna',\n      thumbnail: hiNannaPoster,\n      description: 'Language: te, Genres: Romance, Drama',\n      language: 'te',\n      isStatic: true,\n      genres: ['romance', 'drama'],\n      release_year: 'N/A'\n    }, {\n      id: 1,\n      title: 'Mad2',\n      thumbnail: mad2Poster,\n      description: 'Language: te, Genres: Comedy, Drama, Coming-of-Age',\n      language: 'te',\n      isStatic: true,\n      genres: ['comedy', 'drama', 'coming-of-age'],\n      release_year: 'N/A'\n    }, {\n      id: 297282,\n      title: 'Court',\n      thumbnail: courtPoster,\n      description: 'Language: mr, Genres: Drama, Legal',\n      language: 'mr',\n      isStatic: true,\n      genres: ['drama', 'legal'],\n      release_year: 'N/A'\n    }, {\n      id: 1560,\n      title: 'Return of the Dragon',\n      thumbnail: dragonPoster,\n      description: 'Language: en, Genres: Action, Comedy, Martial Arts',\n      language: 'en',\n      isStatic: true,\n      genres: ['action', 'comedy', 'martial arts'],\n      release_year: 'N/A'\n    }, {\n      id: 614932,\n      title: 'Saaho',\n      thumbnail: saahoPoster,\n      description: 'Language: te, Genres: Action, Thriller',\n      language: 'te',\n      isStatic: true,\n      genres: ['action', 'thriller'],\n      release_year: 'N/A'\n    }, {\n      id: 2,\n      title: 'Saripodhaa Sanivaaram',\n      thumbnail: saripodaPoster,\n      description: 'Language: te, Genres: Action, Thriller, Vigilante',\n      language: 'te',\n      isStatic: true,\n      genres: ['action', 'thriller', 'vigilante'],\n      release_year: 'N/A'\n    }, {\n      id: 100001,\n      title: 'Baahubali 2: The Conclusion',\n      thumbnail: baahubaliPoster,\n      description: 'Language: te, Genres: Action, Drama',\n      language: 'te',\n      isStatic: true,\n      genres: ['action', 'drama'],\n      release_year: 2017\n    }]\n  }, {\n    title: 'Watch It Again',\n    items: [{\n      id: 5,\n      title: 'Inception',\n      thumbnail: blackPoster,\n      description: 'Language: en, Genres: Sci-Fi, Thriller',\n      language: 'en',\n      genres: ['sci-fi', 'thriller'],\n      release_year: 'N/A'\n    }, {\n      id: 6,\n      title: 'Titanic',\n      thumbnail: blackPoster,\n      description: 'Language: en, Genres: Romance, Drama',\n      language: 'en',\n      genres: ['romance', 'drama'],\n      release_year: 'N/A'\n    }]\n  }];\n  const staticMovieTitles = initialRowsData[0].items.map(item => item.title);\n\n  // Utility to generate random integer\n  const randomInt = (min, max) => Math.floor(Math.random() * (max - min + 1)) + min;\n  useEffect(() => {\n    localStorage.setItem('myList', JSON.stringify(favorites));\n  }, [favorites]);\n  const toggleFavorite = item => {\n    setFavorites(prev => {\n      const isFavorited = prev.some(fav => fav.id === item.id);\n      return isFavorited ? prev.filter(fav => fav.id !== item.id) : [...prev, item];\n    });\n  };\n  const fetchTeluguRecommendationsByGenre = async (movieTitle, genres) => {\n    setLoading(true);\n    setError(null);\n    try {\n      const response = await fetch('http://localhost:5000/random-telugu-by-genre', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          genres,\n          exclude_titles: [...staticMovieTitles, movieTitle]\n        })\n      });\n      if (!response.ok) {\n        throw new Error(`HTTP error: ${response.status} - ${await response.text()}`);\n      }\n      const data = await response.json();\n      if (Array.isArray(data)) {\n        const recs = data.map((rec, i) => ({\n          id: rec.id || i + 200,\n          title: rec.title,\n          thumbnail: rec.poster || blackPoster,\n          description: `Language: ${rec.original_language || 'te'}, Genres: ${rec.genres.join(', ') || 'N/A'}, Year: ${rec.year || 'N/A'}`,\n          language: rec.original_language || 'te',\n          genres: rec.genres || [],\n          release_year: rec.year || 'N/A'\n        }));\n        setRecommendations(prev => ({\n          ...prev,\n          [movieTitle]: recs\n        }));\n      } else {\n        throw new Error('Invalid data format');\n      }\n    } catch (err) {\n      setError(`Failed to fetch Telugu recommendations for \"${movieTitle}\": ${err.message}`);\n      setRecommendations(prev => ({\n        ...prev,\n        [movieTitle]: fallbackTeluguMovies.slice(0, randomInt(3, 7))\n      }));\n    } finally {\n      setLoading(false);\n    }\n  };\n  const fetchRecommendations = async movieTitle => {\n    setLoading(true);\n    setError(null);\n    try {\n      const response = await fetch('http://localhost:5000/recommend', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          movie_title: movieTitle\n        })\n      });\n      if (!response.ok) {\n        throw new Error(`HTTP error: ${response.status} - ${await response.text()}`);\n      }\n      const data = await response.json();\n      if (Array.isArray(data)) {\n        const recs = data.map((rec, i) => ({\n          id: rec.id || i + 100,\n          title: rec.title,\n          thumbnail: rec.poster || blackPoster,\n          description: `Language: ${rec.original_language || 'en'}, Genres: ${rec.genres.join(', ') || 'N/A'}, Year: ${rec.year || 'N/A'}`,\n          language: rec.original_language || 'en',\n          genres: rec.genres || [],\n          release_year: rec.year || 'N/A'\n        }));\n        setRecommendations(prev => ({\n          ...prev,\n          [movieTitle]: recs\n        }));\n      } else {\n        throw new Error('Invalid data format');\n      }\n    } catch (err) {\n      setError(`Failed to fetch recommendations for \"${movieTitle}\": ${err.message}`);\n      setRecommendations(prev => ({\n        ...prev,\n        [movieTitle]: []\n      }));\n    } finally {\n      setLoading(false);\n    }\n  };\n  useEffect(() => {\n    const fetchInitialData = async () => {\n      setLoading(true);\n      try {\n        setInitialRows(initialRowsData);\n        // Fetch recommendations for featured item if Telugu or static\n        if (!recommendations[featuredItem.title]) {\n          await fetchTeluguRecommendationsByGenre(featuredItem.title, featuredItem.genres);\n        }\n      } catch (err) {\n        setError('Failed to fetch initial data: ' + err.message);\n      } finally {\n        setLoading(false);\n      }\n    };\n    fetchInitialData();\n  }, []);\n  const handleMoreInfo = item => {\n    setSelectedItem({\n      ...item,\n      thumbnail: item.isStatic && staticMoviesWithLocalPosters[item.title] ? staticMoviesWithLocalPosters[item.title] : item.thumbnail\n    });\n    // All static movies and Telugu movies fetch random Telugu recommendations\n    if (item.isStatic || item.language === 'te') {\n      fetchTeluguRecommendationsByGenre(item.title, item.genres);\n    } else {\n      fetchRecommendations(item.title);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"home\",\n    children: [/*#__PURE__*/_jsxDEV(Header, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 215,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Hero, {\n      item: featuredItem,\n      onMoreInfo: handleMoreInfo,\n      favorites: favorites,\n      toggleFavorite: toggleFavorite\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 216,\n      columnNumber: 7\n    }, this), loading && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"loading\",\n      children: \"Loading...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 217,\n      columnNumber: 19\n    }, this), error && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"error\",\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 218,\n      columnNumber: 17\n    }, this), initialRows.map((row, index) => /*#__PURE__*/_jsxDEV(Row, {\n      title: row.title,\n      items: row.items,\n      onMoreInfo: handleMoreInfo,\n      favorites: favorites,\n      toggleFavorite: toggleFavorite\n    }, index, false, {\n      fileName: _jsxFileName,\n      lineNumber: 220,\n      columnNumber: 9\n    }, this)), Object.entries(recommendations).map(([title, recs]) => recs.length > 0 && /*#__PURE__*/_jsxDEV(Row, {\n      title: `Recommendations for ${title}`,\n      items: recs,\n      onMoreInfo: handleMoreInfo,\n      favorites: favorites,\n      toggleFavorite: toggleFavorite\n    }, `rec-${title}`, false, {\n      fileName: _jsxFileName,\n      lineNumber: 231,\n      columnNumber: 11\n    }, this)), selectedItem && /*#__PURE__*/_jsxDEV(Modal, {\n      item: selectedItem,\n      onClose: () => setSelectedItem(null)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 241,\n      columnNumber: 24\n    }, this), /*#__PURE__*/_jsxDEV(Footer, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 242,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 214,\n    columnNumber: 5\n  }, this);\n}\n_s(Home, \"5Sst78SJVKExfFjcoKI3VBB/jIc=\");\n_c = Home;\nexport default Home;\nvar _c;\n$RefreshReg$(_c, \"Home\");","map":{"version":3,"names":["React","useState","useEffect","Header","Hero","Row","Modal","Footer","kalkiPoster","salaarPoster","chaavaPoster","rrrPoster","pushpa2Poster","hiNannaPoster","mad2Poster","courtPoster","dragonPoster","saripodaPoster","saahoPoster","baahubaliPoster","blackPoster","jsxDEV","_jsxDEV","Home","_s","selectedItem","setSelectedItem","recommendations","setRecommendations","initialRows","setInitialRows","loading","setLoading","error","setError","favorites","setFavorites","JSON","parse","localStorage","getItem","staticMoviesWithLocalPosters","Chhaava","RRR","Mad2","Court","Saaho","fallbackTeluguMovies","id","title","thumbnail","description","language","genres","release_year","featuredItem","initialRowsData","items","isStatic","staticMovieTitles","map","item","randomInt","min","max","Math","floor","random","setItem","stringify","toggleFavorite","prev","isFavorited","some","fav","filter","fetchTeluguRecommendationsByGenre","movieTitle","response","fetch","method","headers","body","exclude_titles","ok","Error","status","text","data","json","Array","isArray","recs","rec","i","poster","original_language","join","year","err","message","slice","fetchRecommendations","movie_title","fetchInitialData","handleMoreInfo","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onMoreInfo","row","index","Object","entries","length","onClose","_c","$RefreshReg$"],"sources":["C:/Users/Rajkamal/Desktop/movie_recommender/frontend/src/pages/Home.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport Header from '../components/Header';\r\nimport Hero from '../components/Hero';\r\nimport Row from '../components/Row';\r\nimport Modal from '../components/Modal';\r\nimport Footer from '../components/Footer';\r\nimport './Home.css';\r\n\r\nimport kalkiPoster from '../data/Kalki.jpg';\r\nimport salaarPoster from '../data/salaar.jpg';\r\nimport chaavaPoster from '../data/chaava.jpg';\r\nimport rrrPoster from '../data/rrr.jpg';\r\nimport pushpa2Poster from '../data/pushpa2.jpg';\r\nimport hiNannaPoster from '../data/hinanna.jpg';\r\nimport mad2Poster from '../data/mad2.jpg';\r\nimport courtPoster from '../data/court.jpg';\r\nimport dragonPoster from '../data/rod.jpg';\r\nimport saripodaPoster from '../data/ss.jpg';\r\nimport saahoPoster from '../data/saaho.jpg';\r\nimport baahubaliPoster from '../data/bb2.jpg';\r\nimport blackPoster from '../data/black.jpg';\r\n\r\nfunction Home() {\r\n  const [selectedItem, setSelectedItem] = useState(null);\r\n  const [recommendations, setRecommendations] = useState({});\r\n  const [initialRows, setInitialRows] = useState([]);\r\n  const [loading, setLoading] = useState(false);\r\n  const [error, setError] = useState(null);\r\n  const [favorites, setFavorites] = useState(() => JSON.parse(localStorage.getItem('myList') || '[]'));\r\n\r\n  // Map static movie titles to local posters\r\n  const staticMoviesWithLocalPosters = {\r\n    'Kalki 2898 AD': kalkiPoster,\r\n    'Salaar: Part 1 – Ceasefire': salaarPoster,\r\n    Chhaava: chaavaPoster,\r\n    RRR: rrrPoster,\r\n    'Pushpa 2: The Rule': pushpa2Poster,\r\n    'Hi Nanna': hiNannaPoster,\r\n    Mad2: mad2Poster,\r\n    Court: courtPoster,\r\n    'Return of the Dragon': dragonPoster,\r\n    Saaho: saahoPoster,\r\n    'Saripodhaa Sanivaaram': saripodaPoster,\r\n    'Baahubali 2: The Conclusion': baahubaliPoster\r\n  };\r\n\r\n  // Fallback Telugu movies for failed fetches\r\n  const fallbackTeluguMovies = [\r\n    { id: 100000, title: 'Baahubali: The Beginning', thumbnail: baahubaliPoster, description: 'Language: te, Genres: Action, Drama, Year: 2015', language: 'te', genres: ['action', 'drama'], release_year: 2015 },\r\n    { id: 100001, title: 'Baahubali 2: The Conclusion', thumbnail: baahubaliPoster, description: 'Language: te, Genres: Action, Drama, Year: 2017', language: 'te', genres: ['action', 'drama'], release_year: 2017 },\r\n    { id: 100002, title: '1 - Nenokkadine', thumbnail: blackPoster, description: 'Language: te, Genres: Action, Thriller, Year: 2014', language: 'te', genres: ['action', 'thriller'], release_year: 2014 },\r\n    { id: 100003, title: 'Dhoom:3', thumbnail: blackPoster, description: 'Language: te, Genres: Action, Thriller, Year: 2013', language: 'te', genres: ['action', 'thriller'], release_year: 2013 }\r\n  ];\r\n\r\n  // Featured item\r\n  const featuredItem = {\r\n    id: 100000,\r\n    title: 'Baahubali: The Beginning',\r\n    description: 'A Telugu epic about valor and sacrifice.',\r\n    thumbnail: baahubaliPoster,\r\n    language: 'te',\r\n    genres: ['action', 'drama'],\r\n    release_year: 2015\r\n  };\r\n\r\n  // Initial rows with static movies\r\n  const initialRowsData = [\r\n    {\r\n      title: 'Trending Movies',\r\n      items: [\r\n        { id: 900352, title: 'Kalki 2898 AD', thumbnail: kalkiPoster, description: 'Language: te, Genres: Sci-Fi, Mythology, Action', language: 'te', isStatic: true, genres: ['sci-fi', 'mythology', 'action'], release_year: 'N/A' },\r\n        { id: 934632, title: 'Salaar: Part 1 – Ceasefire', thumbnail: salaarPoster, description: 'Language: te, Genres: Action, Drama, Epic', language: 'te', isStatic: true, genres: ['action', 'drama', 'epic'], release_year: 'N/A' },\r\n        { id: 0, title: 'Chhaava', thumbnail: chaavaPoster, description: 'Language: hi, Genres: Historical, Action, Drama', language: 'hi', isStatic: true, genres: ['historical', 'action', 'drama'], release_year: 'N/A' },\r\n        { id: 614933, title: 'RRR', thumbnail: rrrPoster, description: 'Language: te, Genres: Action, Historical, Drama, Epic', language: 'te', isStatic: true, genres: ['action', 'historical', 'drama', 'epic'], release_year: 'N/A' },\r\n        { id: 614934, title: 'Pushpa 2: The Rule', thumbnail: pushpa2Poster, description: 'Language: te, Genres: Action, Drama', language: 'te', isStatic: true, genres: ['action', 'drama'], release_year: 'N/A' },\r\n        { id: 1121402, title: 'Hi Nanna', thumbnail: hiNannaPoster, description: 'Language: te, Genres: Romance, Drama', language: 'te', isStatic: true, genres: ['romance', 'drama'], release_year: 'N/A' },\r\n        { id: 1, title: 'Mad2', thumbnail: mad2Poster, description: 'Language: te, Genres: Comedy, Drama, Coming-of-Age', language: 'te', isStatic: true, genres: ['comedy', 'drama', 'coming-of-age'], release_year: 'N/A' },\r\n        { id: 297282, title: 'Court', thumbnail: courtPoster, description: 'Language: mr, Genres: Drama, Legal', language: 'mr', isStatic: true, genres: ['drama', 'legal'], release_year: 'N/A' },\r\n        { id: 1560, title: 'Return of the Dragon', thumbnail: dragonPoster, description: 'Language: en, Genres: Action, Comedy, Martial Arts', language: 'en', isStatic: true, genres: ['action', 'comedy', 'martial arts'], release_year: 'N/A' },\r\n        { id: 614932, title: 'Saaho', thumbnail: saahoPoster, description: 'Language: te, Genres: Action, Thriller', language: 'te', isStatic: true, genres: ['action', 'thriller'], release_year: 'N/A' },\r\n        { id: 2, title: 'Saripodhaa Sanivaaram', thumbnail: saripodaPoster, description: 'Language: te, Genres: Action, Thriller, Vigilante', language: 'te', isStatic: true, genres: ['action', 'thriller', 'vigilante'], release_year: 'N/A' },\r\n        { id: 100001, title: 'Baahubali 2: The Conclusion', thumbnail: baahubaliPoster, description: 'Language: te, Genres: Action, Drama', language: 'te', isStatic: true, genres: ['action', 'drama'], release_year: 2017 }\r\n      ]\r\n    },\r\n    {\r\n      title: 'Watch It Again',\r\n      items: [\r\n        { id: 5, title: 'Inception', thumbnail: blackPoster, description: 'Language: en, Genres: Sci-Fi, Thriller', language: 'en', genres: ['sci-fi', 'thriller'], release_year: 'N/A' },\r\n        { id: 6, title: 'Titanic', thumbnail: blackPoster, description: 'Language: en, Genres: Romance, Drama', language: 'en', genres: ['romance', 'drama'], release_year: 'N/A' }\r\n      ]\r\n    }\r\n  ];\r\n\r\n  const staticMovieTitles = initialRowsData[0].items.map(item => item.title);\r\n\r\n  // Utility to generate random integer\r\n  const randomInt = (min, max) => Math.floor(Math.random() * (max - min + 1)) + min;\r\n\r\n  useEffect(() => {\r\n    localStorage.setItem('myList', JSON.stringify(favorites));\r\n  }, [favorites]);\r\n\r\n  const toggleFavorite = (item) => {\r\n    setFavorites((prev) => {\r\n      const isFavorited = prev.some((fav) => fav.id === item.id);\r\n      return isFavorited ? prev.filter((fav) => fav.id !== item.id) : [...prev, item];\r\n    });\r\n  };\r\n\r\n  const fetchTeluguRecommendationsByGenre = async (movieTitle, genres) => {\r\n    setLoading(true);\r\n    setError(null);\r\n    try {\r\n      const response = await fetch('http://localhost:5000/random-telugu-by-genre', {\r\n        method: 'POST',\r\n        headers: { 'Content-Type': 'application/json' },\r\n        body: JSON.stringify({ genres, exclude_titles: [...staticMovieTitles, movieTitle] })\r\n      });\r\n      if (!response.ok) {\r\n        throw new Error(`HTTP error: ${response.status} - ${await response.text()}`);\r\n      }\r\n      const data = await response.json();\r\n      if (Array.isArray(data)) {\r\n        const recs = data.map((rec, i) => ({\r\n          id: rec.id || (i + 200),\r\n          title: rec.title,\r\n          thumbnail: rec.poster || blackPoster,\r\n          description: `Language: ${rec.original_language || 'te'}, Genres: ${rec.genres.join(', ') || 'N/A'}, Year: ${rec.year || 'N/A'}`,\r\n          language: rec.original_language || 'te',\r\n          genres: rec.genres || [],\r\n          release_year: rec.year || 'N/A'\r\n        }));\r\n        setRecommendations((prev) => ({ ...prev, [movieTitle]: recs }));\r\n      } else {\r\n        throw new Error('Invalid data format');\r\n      }\r\n    } catch (err) {\r\n      setError(`Failed to fetch Telugu recommendations for \"${movieTitle}\": ${err.message}`);\r\n      setRecommendations((prev) => ({ ...prev, [movieTitle]: fallbackTeluguMovies.slice(0, randomInt(3, 7)) }));\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  const fetchRecommendations = async (movieTitle) => {\r\n    setLoading(true);\r\n    setError(null);\r\n    try {\r\n      const response = await fetch('http://localhost:5000/recommend', {\r\n        method: 'POST',\r\n        headers: { 'Content-Type': 'application/json' },\r\n        body: JSON.stringify({ movie_title: movieTitle })\r\n      });\r\n      if (!response.ok) {\r\n        throw new Error(`HTTP error: ${response.status} - ${await response.text()}`);\r\n      }\r\n      const data = await response.json();\r\n      if (Array.isArray(data)) {\r\n        const recs = data.map((rec, i) => ({\r\n          id: rec.id || (i + 100),\r\n          title: rec.title,\r\n          thumbnail: rec.poster || blackPoster,\r\n          description: `Language: ${rec.original_language || 'en'}, Genres: ${rec.genres.join(', ') || 'N/A'}, Year: ${rec.year || 'N/A'}`,\r\n          language: rec.original_language || 'en',\r\n          genres: rec.genres || [],\r\n          release_year: rec.year || 'N/A'\r\n        }));\r\n        setRecommendations((prev) => ({ ...prev, [movieTitle]: recs }));\r\n      } else {\r\n        throw new Error('Invalid data format');\r\n      }\r\n    } catch (err) {\r\n      setError(`Failed to fetch recommendations for \"${movieTitle}\": ${err.message}`);\r\n      setRecommendations((prev) => ({ ...prev, [movieTitle]: [] }));\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    const fetchInitialData = async () => {\r\n      setLoading(true);\r\n      try {\r\n        setInitialRows(initialRowsData);\r\n        // Fetch recommendations for featured item if Telugu or static\r\n        if (!recommendations[featuredItem.title]) {\r\n          await fetchTeluguRecommendationsByGenre(featuredItem.title, featuredItem.genres);\r\n        }\r\n      } catch (err) {\r\n        setError('Failed to fetch initial data: ' + err.message);\r\n      } finally {\r\n        setLoading(false);\r\n      }\r\n    };\r\n    fetchInitialData();\r\n  }, []);\r\n\r\n  const handleMoreInfo = (item) => {\r\n    setSelectedItem({\r\n      ...item,\r\n      thumbnail: item.isStatic && staticMoviesWithLocalPosters[item.title]\r\n        ? staticMoviesWithLocalPosters[item.title]\r\n        : item.thumbnail\r\n    });\r\n    // All static movies and Telugu movies fetch random Telugu recommendations\r\n    if (item.isStatic || item.language === 'te') {\r\n      fetchTeluguRecommendationsByGenre(item.title, item.genres);\r\n    } else {\r\n      fetchRecommendations(item.title);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"home\">\r\n      <Header />\r\n      <Hero item={featuredItem} onMoreInfo={handleMoreInfo} favorites={favorites} toggleFavorite={toggleFavorite} />\r\n      {loading && <div className=\"loading\">Loading...</div>}\r\n      {error && <div className=\"error\">{error}</div>}\r\n      {initialRows.map((row, index) => (\r\n        <Row\r\n          key={index}\r\n          title={row.title}\r\n          items={row.items}\r\n          onMoreInfo={handleMoreInfo}\r\n          favorites={favorites}\r\n          toggleFavorite={toggleFavorite}\r\n        />\r\n      ))}\r\n      {Object.entries(recommendations).map(([title, recs]) => (\r\n        recs.length > 0 && (\r\n          <Row\r\n            key={`rec-${title}`}\r\n            title={`Recommendations for ${title}`}\r\n            items={recs}\r\n            onMoreInfo={handleMoreInfo}\r\n            favorites={favorites}\r\n            toggleFavorite={toggleFavorite}\r\n          />\r\n        )\r\n      ))}\r\n      {selectedItem && <Modal item={selectedItem} onClose={() => setSelectedItem(null)} />}\r\n      <Footer />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Home;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}