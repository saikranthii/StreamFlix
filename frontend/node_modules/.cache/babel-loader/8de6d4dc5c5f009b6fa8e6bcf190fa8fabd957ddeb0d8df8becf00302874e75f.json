{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Rajkamal\\\\Desktop\\\\movie_recommender\\\\frontend\\\\src\\\\pages\\\\Home.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport Header from '../components/Header';\nimport Hero from '../components/Hero';\nimport Row from '../components/Row';\nimport Modal from '../components/Modal';\nimport Footer from '../components/Footer';\nimport './Home.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Home() {\n  _s();\n  const [selectedItem, setSelectedItem] = useState(null);\n  const [recommendations, setRecommendations] = useState({});\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState(null);\n\n  // Sample featured item\n  const featuredItem = {\n    id: 1,\n    title: \"Toy Story (1995)\",\n    // Using a title from the dataset\n    description: \"A story of a boy and his toys that come to life.\",\n    poster: \"https://via.placeholder.com/1280x720?text=Toy+Story\"\n  };\n  const initialRows = [{\n    title: \"Trending Now\",\n    items: [{\n      id: 2,\n      title: \"Jumanji (1995)\",\n      poster: \"https://via.placeholder.com/300x450?text=Jumanji\"\n    }, {\n      id: 3,\n      title: \"The Crown\",\n      poster: \"https://via.placeholder.com/300x450?text=The+Crown\"\n    }, {\n      id: 4,\n      title: \"Mindhunter\",\n      poster: \"https://via.placeholder.com/300x450?text=Mindhunter\"\n    }]\n  }, {\n    title: \"Watch It Again\",\n    items: [{\n      id: 5,\n      title: \"Breaking Bad\",\n      poster: \"https://via.placeholder.com/300x450?text=Breaking+Bad\"\n    }, {\n      id: 6,\n      title: \"Narcos\",\n      poster: \"https://via.placeholder.com/300x450?text=Narcos\"\n    }]\n  }];\n  const fetchRecommendations = async movieTitle => {\n    setLoading(true);\n    setError(null);\n    console.log(`Fetching recommendations for: ${movieTitle}`); // Debug\n    try {\n      const response = await fetch('http://localhost:5001/recommend', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          movie_title: movieTitle\n        })\n      });\n      const data = await response.json();\n      console.log(`Response data:`, data); // Debug\n      if (response.ok) {\n        setRecommendations(prev => ({\n          ...prev,\n          [movieTitle]: data\n        }));\n      } else {\n        setError(data.error || 'Failed to fetch recommendations');\n      }\n    } catch (err) {\n      console.error('Fetch error:', err);\n      setError('An error occurred while fetching recommendations');\n    } finally {\n      setLoading(false);\n    }\n  };\n  const handleMoreInfo = item => {\n    setSelectedItem(item);\n    if (!recommendations[item.title]) {\n      fetchRecommendations(item.title);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"home\",\n    children: [/*#__PURE__*/_jsxDEV(Header, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Hero, {\n      item: featuredItem,\n      onMoreInfo: handleMoreInfo\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 7\n    }, this), initialRows.map((row, index) => /*#__PURE__*/_jsxDEV(Row, {\n      title: row.title,\n      items: row.items,\n      onMoreInfo: handleMoreInfo\n    }, index, false, {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 9\n    }, this)), Object.entries(recommendations).map(([title, recs]) => recs.length > 0 && /*#__PURE__*/_jsxDEV(Row, {\n      title: `Recommendations for ${title}`,\n      items: recs.map((rec, i) => ({\n        id: i + 100,\n        title: rec.title,\n        thumbnail: rec.poster || `https://via.placeholder.com/300x450?text=${rec.title}`,\n        description: rec.description || 'No description available'\n      })),\n      onMoreInfo: handleMoreInfo\n    }, `rec-${title}`, false, {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 11\n    }, this)), loading && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"loading\",\n      children: \"Loading recommendations...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 19\n    }, this), error && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"error\",\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 17\n    }, this), selectedItem && /*#__PURE__*/_jsxDEV(Modal, {\n      item: selectedItem,\n      onClose: () => setSelectedItem(null)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 24\n    }, this), /*#__PURE__*/_jsxDEV(Footer, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 74,\n    columnNumber: 5\n  }, this);\n}\n_s(Home, \"WrYUYvZxNCA+UGZ0leuDONiFqQs=\");\n_c = Home;\nexport default Home;\nvar _c;\n$RefreshReg$(_c, \"Home\");","map":{"version":3,"names":["React","useState","useEffect","Header","Hero","Row","Modal","Footer","jsxDEV","_jsxDEV","Home","_s","selectedItem","setSelectedItem","recommendations","setRecommendations","loading","setLoading","error","setError","featuredItem","id","title","description","poster","initialRows","items","fetchRecommendations","movieTitle","console","log","response","fetch","method","headers","body","JSON","stringify","movie_title","data","json","ok","prev","err","handleMoreInfo","item","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onMoreInfo","map","row","index","Object","entries","recs","length","rec","i","thumbnail","onClose","_c","$RefreshReg$"],"sources":["C:/Users/Rajkamal/Desktop/movie_recommender/frontend/src/pages/Home.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport Header from '../components/Header';\r\nimport Hero from '../components/Hero';\r\nimport Row from '../components/Row';\r\nimport Modal from '../components/Modal';\r\nimport Footer from '../components/Footer';\r\nimport './Home.css';\r\n\r\nfunction Home() {\r\n  const [selectedItem, setSelectedItem] = useState(null);\r\n  const [recommendations, setRecommendations] = useState({});\r\n  const [loading, setLoading] = useState(false);\r\n  const [error, setError] = useState(null);\r\n\r\n  // Sample featured item\r\n  const featuredItem = {\r\n    id: 1,\r\n    title: \"Toy Story (1995)\", // Using a title from the dataset\r\n    description: \"A story of a boy and his toys that come to life.\",\r\n    poster: \"https://via.placeholder.com/1280x720?text=Toy+Story\",\r\n  };\r\n\r\n  const initialRows = [\r\n    {\r\n      title: \"Trending Now\",\r\n      items: [\r\n        { id: 2, title: \"Jumanji (1995)\", poster: \"https://via.placeholder.com/300x450?text=Jumanji\" },\r\n        { id: 3, title: \"The Crown\", poster: \"https://via.placeholder.com/300x450?text=The+Crown\" },\r\n        { id: 4, title: \"Mindhunter\", poster: \"https://via.placeholder.com/300x450?text=Mindhunter\" },\r\n      ],\r\n    },\r\n    {\r\n      title: \"Watch It Again\",\r\n      items: [\r\n        { id: 5, title: \"Breaking Bad\", poster: \"https://via.placeholder.com/300x450?text=Breaking+Bad\" },\r\n        { id: 6, title: \"Narcos\", poster: \"https://via.placeholder.com/300x450?text=Narcos\" },\r\n      ],\r\n    },\r\n  ];\r\n\r\n  const fetchRecommendations = async (movieTitle) => {\r\n    setLoading(true);\r\n    setError(null);\r\n    console.log(`Fetching recommendations for: ${movieTitle}`); // Debug\r\n    try {\r\n      const response = await fetch('http://localhost:5001/recommend', {\r\n        method: 'POST',\r\n        headers: { 'Content-Type': 'application/json' },\r\n        body: JSON.stringify({ movie_title: movieTitle }),\r\n      });\r\n      const data = await response.json();\r\n      console.log(`Response data:`, data); // Debug\r\n      if (response.ok) {\r\n        setRecommendations((prev) => ({ ...prev, [movieTitle]: data }));\r\n      } else {\r\n        setError(data.error || 'Failed to fetch recommendations');\r\n      }\r\n    } catch (err) {\r\n      console.error('Fetch error:', err);\r\n      setError('An error occurred while fetching recommendations');\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  const handleMoreInfo = (item) => {\r\n    setSelectedItem(item);\r\n    if (!recommendations[item.title]) {\r\n      fetchRecommendations(item.title);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"home\">\r\n      <Header />\r\n      <Hero item={featuredItem} onMoreInfo={handleMoreInfo} />\r\n      {initialRows.map((row, index) => (\r\n        <Row key={index} title={row.title} items={row.items} onMoreInfo={handleMoreInfo} />\r\n      ))}\r\n      {Object.entries(recommendations).map(([title, recs]) =>\r\n        recs.length > 0 && (\r\n          <Row\r\n            key={`rec-${title}`}\r\n            title={`Recommendations for ${title}`}\r\n            items={recs.map((rec, i) => ({\r\n              id: i + 100,\r\n              title: rec.title,\r\n              thumbnail: rec.poster || `https://via.placeholder.com/300x450?text=${rec.title}`,\r\n              description: rec.description || 'No description available',\r\n            }))}\r\n            onMoreInfo={handleMoreInfo}\r\n          />\r\n        )\r\n      )}\r\n      {loading && <div className=\"loading\">Loading recommendations...</div>}\r\n      {error && <div className=\"error\">{error}</div>}\r\n      {selectedItem && <Modal item={selectedItem} onClose={() => setSelectedItem(null)} />}\r\n      <Footer />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Home;"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,OAAOC,MAAM,MAAM,sBAAsB;AACzC,OAAOC,IAAI,MAAM,oBAAoB;AACrC,OAAOC,GAAG,MAAM,mBAAmB;AACnC,OAAOC,KAAK,MAAM,qBAAqB;AACvC,OAAOC,MAAM,MAAM,sBAAsB;AACzC,OAAO,YAAY;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEpB,SAASC,IAAIA,CAAA,EAAG;EAAAC,EAAA;EACd,MAAM,CAACC,YAAY,EAAEC,eAAe,CAAC,GAAGZ,QAAQ,CAAC,IAAI,CAAC;EACtD,MAAM,CAACa,eAAe,EAAEC,kBAAkB,CAAC,GAAGd,QAAQ,CAAC,CAAC,CAAC,CAAC;EAC1D,MAAM,CAACe,OAAO,EAAEC,UAAU,CAAC,GAAGhB,QAAQ,CAAC,KAAK,CAAC;EAC7C,MAAM,CAACiB,KAAK,EAAEC,QAAQ,CAAC,GAAGlB,QAAQ,CAAC,IAAI,CAAC;;EAExC;EACA,MAAMmB,YAAY,GAAG;IACnBC,EAAE,EAAE,CAAC;IACLC,KAAK,EAAE,kBAAkB;IAAE;IAC3BC,WAAW,EAAE,kDAAkD;IAC/DC,MAAM,EAAE;EACV,CAAC;EAED,MAAMC,WAAW,GAAG,CAClB;IACEH,KAAK,EAAE,cAAc;IACrBI,KAAK,EAAE,CACL;MAAEL,EAAE,EAAE,CAAC;MAAEC,KAAK,EAAE,gBAAgB;MAAEE,MAAM,EAAE;IAAmD,CAAC,EAC9F;MAAEH,EAAE,EAAE,CAAC;MAAEC,KAAK,EAAE,WAAW;MAAEE,MAAM,EAAE;IAAqD,CAAC,EAC3F;MAAEH,EAAE,EAAE,CAAC;MAAEC,KAAK,EAAE,YAAY;MAAEE,MAAM,EAAE;IAAsD,CAAC;EAEjG,CAAC,EACD;IACEF,KAAK,EAAE,gBAAgB;IACvBI,KAAK,EAAE,CACL;MAAEL,EAAE,EAAE,CAAC;MAAEC,KAAK,EAAE,cAAc;MAAEE,MAAM,EAAE;IAAwD,CAAC,EACjG;MAAEH,EAAE,EAAE,CAAC;MAAEC,KAAK,EAAE,QAAQ;MAAEE,MAAM,EAAE;IAAkD,CAAC;EAEzF,CAAC,CACF;EAED,MAAMG,oBAAoB,GAAG,MAAOC,UAAU,IAAK;IACjDX,UAAU,CAAC,IAAI,CAAC;IAChBE,QAAQ,CAAC,IAAI,CAAC;IACdU,OAAO,CAACC,GAAG,CAAC,iCAAiCF,UAAU,EAAE,CAAC,CAAC,CAAC;IAC5D,IAAI;MACF,MAAMG,QAAQ,GAAG,MAAMC,KAAK,CAAC,iCAAiC,EAAE;QAC9DC,MAAM,EAAE,MAAM;QACdC,OAAO,EAAE;UAAE,cAAc,EAAE;QAAmB,CAAC;QAC/CC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAAC;UAAEC,WAAW,EAAEV;QAAW,CAAC;MAClD,CAAC,CAAC;MACF,MAAMW,IAAI,GAAG,MAAMR,QAAQ,CAACS,IAAI,CAAC,CAAC;MAClCX,OAAO,CAACC,GAAG,CAAC,gBAAgB,EAAES,IAAI,CAAC,CAAC,CAAC;MACrC,IAAIR,QAAQ,CAACU,EAAE,EAAE;QACf1B,kBAAkB,CAAE2B,IAAI,KAAM;UAAE,GAAGA,IAAI;UAAE,CAACd,UAAU,GAAGW;QAAK,CAAC,CAAC,CAAC;MACjE,CAAC,MAAM;QACLpB,QAAQ,CAACoB,IAAI,CAACrB,KAAK,IAAI,iCAAiC,CAAC;MAC3D;IACF,CAAC,CAAC,OAAOyB,GAAG,EAAE;MACZd,OAAO,CAACX,KAAK,CAAC,cAAc,EAAEyB,GAAG,CAAC;MAClCxB,QAAQ,CAAC,kDAAkD,CAAC;IAC9D,CAAC,SAAS;MACRF,UAAU,CAAC,KAAK,CAAC;IACnB;EACF,CAAC;EAED,MAAM2B,cAAc,GAAIC,IAAI,IAAK;IAC/BhC,eAAe,CAACgC,IAAI,CAAC;IACrB,IAAI,CAAC/B,eAAe,CAAC+B,IAAI,CAACvB,KAAK,CAAC,EAAE;MAChCK,oBAAoB,CAACkB,IAAI,CAACvB,KAAK,CAAC;IAClC;EACF,CAAC;EAED,oBACEb,OAAA;IAAKqC,SAAS,EAAC,MAAM;IAAAC,QAAA,gBACnBtC,OAAA,CAACN,MAAM;MAAA6C,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,eACV1C,OAAA,CAACL,IAAI;MAACyC,IAAI,EAAEzB,YAAa;MAACgC,UAAU,EAAER;IAAe;MAAAI,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,EACvD1B,WAAW,CAAC4B,GAAG,CAAC,CAACC,GAAG,EAAEC,KAAK,kBAC1B9C,OAAA,CAACJ,GAAG;MAAaiB,KAAK,EAAEgC,GAAG,CAAChC,KAAM;MAACI,KAAK,EAAE4B,GAAG,CAAC5B,KAAM;MAAC0B,UAAU,EAAER;IAAe,GAAtEW,KAAK;MAAAP,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAmE,CACnF,CAAC,EACDK,MAAM,CAACC,OAAO,CAAC3C,eAAe,CAAC,CAACuC,GAAG,CAAC,CAAC,CAAC/B,KAAK,EAAEoC,IAAI,CAAC,KACjDA,IAAI,CAACC,MAAM,GAAG,CAAC,iBACblD,OAAA,CAACJ,GAAG;MAEFiB,KAAK,EAAE,uBAAuBA,KAAK,EAAG;MACtCI,KAAK,EAAEgC,IAAI,CAACL,GAAG,CAAC,CAACO,GAAG,EAAEC,CAAC,MAAM;QAC3BxC,EAAE,EAAEwC,CAAC,GAAG,GAAG;QACXvC,KAAK,EAAEsC,GAAG,CAACtC,KAAK;QAChBwC,SAAS,EAAEF,GAAG,CAACpC,MAAM,IAAI,4CAA4CoC,GAAG,CAACtC,KAAK,EAAE;QAChFC,WAAW,EAAEqC,GAAG,CAACrC,WAAW,IAAI;MAClC,CAAC,CAAC,CAAE;MACJ6B,UAAU,EAAER;IAAe,GARtB,OAAOtB,KAAK,EAAE;MAAA0B,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OASpB,CAEL,CAAC,EACAnC,OAAO,iBAAIP,OAAA;MAAKqC,SAAS,EAAC,SAAS;MAAAC,QAAA,EAAC;IAA0B;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAK,CAAC,EACpEjC,KAAK,iBAAIT,OAAA;MAAKqC,SAAS,EAAC,OAAO;MAAAC,QAAA,EAAE7B;IAAK;MAAA8B,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAM,CAAC,EAC7CvC,YAAY,iBAAIH,OAAA,CAACH,KAAK;MAACuC,IAAI,EAAEjC,YAAa;MAACmD,OAAO,EAAEA,CAAA,KAAMlD,eAAe,CAAC,IAAI;IAAE;MAAAmC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,eACpF1C,OAAA,CAACF,MAAM;MAAAyC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACP,CAAC;AAEV;AAACxC,EAAA,CA5FQD,IAAI;AAAAsD,EAAA,GAAJtD,IAAI;AA8Fb,eAAeA,IAAI;AAAC,IAAAsD,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}