{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Rajkamal\\\\Desktop\\\\movie_recommender\\\\frontend\\\\src\\\\pages\\\\Home.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport Header from '../components/Header';\nimport Hero from '../components/Hero';\nimport Row from '../components/Row';\nimport Modal from '../components/Modal';\nimport Footer from '../components/Footer';\nimport './Home.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Home() {\n  _s();\n  const [selectedItem, setSelectedItem] = useState(null);\n  const [recommendations, setRecommendations] = useState(() => {\n    const saved = sessionStorage.getItem('recommendations');\n    return saved ? JSON.parse(saved) : {};\n  });\n  const [initialRows, setInitialRows] = useState([]);\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState(null);\n  const [favorites, setFavorites] = useState(() => JSON.parse(localStorage.getItem('myList') || '[]'));\n  const [notification, setNotification] = useState('');\n\n  // Featured item for Baahubali: The Beginning\n  const featuredItem = {\n    id: 301344,\n    title: 'Baahubali: The Beginning',\n    description: 'A Telugu epic about valor and sacrifice.',\n    thumbnail: null,\n    // Will be fetched dynamically\n    video: '/videos/bb2.mp4',\n    language: 'te',\n    genres: ['Action', 'Period', 'Epic']\n  };\n\n  // Trending Telugu movies aligned with backend\n  const initialRowsData = [{\n    title: 'Trending Movies',\n    items: [{\n      id: 900352,\n      title: 'Kalki 2898 AD',\n      thumbnail: null,\n      description: 'A futuristic film inspired by Hindu mythology.',\n      language: 'te',\n      genres: ['Sci-Fi', 'Mythology', 'Action']\n    }, {\n      id: 934632,\n      title: 'Salaar: Part 1 â€“ Ceasefire',\n      thumbnail: null,\n      description: 'An action-packed saga of power and betrayal.',\n      language: 'te',\n      genres: ['Action', 'Drama', 'Epic']\n    }, {\n      id: 614933,\n      title: 'RRR',\n      thumbnail: null,\n      description: 'A revolutionary tale of friendship and rebellion.',\n      language: 'te',\n      genres: ['Action', 'Historical', 'Drama', 'Epic']\n    }, {\n      id: 614934,\n      title: 'Pushpa 2: The Rule',\n      thumbnail: null,\n      description: 'A gripping sequel to the smuggling saga.',\n      language: 'te',\n      genres: ['Action', 'Drama']\n    }, {\n      id: 1121402,\n      title: 'Hi Nanna',\n      thumbnail: null,\n      description: 'A heartwarming family drama.',\n      language: 'te',\n      genres: ['Romance', 'Drama']\n    }, {\n      id: 1080802,\n      title: 'Saripodhaa Sanivaaram',\n      thumbnail: null,\n      description: 'An intense vigilante story.',\n      language: 'te',\n      genres: ['Action', 'Thriller', 'Vigilante']\n    }, {\n      id: 614932,\n      title: 'Saaho',\n      thumbnail: null,\n      description: 'A high-octane action thriller.',\n      language: 'te',\n      genres: ['Action', 'Thriller']\n    }]\n  }, {\n    title: 'Watch It Again',\n    items: [{\n      id: 5,\n      title: 'Inception',\n      thumbnail: null,\n      description: 'A mind-bending heist movie.',\n      language: 'en',\n      genres: ['Sci-Fi', 'Thriller']\n    }, {\n      id: 6,\n      title: 'Titanic',\n      thumbnail: null,\n      description: 'A romantic disaster film.',\n      language: 'en',\n      genres: ['Romance', 'Drama']\n    }]\n  }];\n\n  // Clear recommendations from sessionStorage on page unload\n  useEffect(() => {\n    const handleBeforeUnload = () => {\n      sessionStorage.removeItem('recommendations');\n    };\n    window.addEventListener('beforeunload', handleBeforeUnload);\n    return () => window.removeEventListener('beforeunload', handleBeforeUnload);\n  }, []);\n\n  // Save favorites to localStorage\n  useEffect(() => {\n    window.scrollTo(0, 0);\n    localStorage.setItem('myList', JSON.stringify(favorites));\n  }, [favorites]);\n\n  // Save recommendations to sessionStorage\n  useEffect(() => {\n    sessionStorage.setItem('recommendations', JSON.stringify(recommendations));\n  }, [recommendations]);\n  const toggleFavorite = item => {\n    if (!item.id || !item.title) {\n      setError('Invalid movie item');\n      return;\n    }\n    setFavorites(prevFavorites => {\n      const isFavorited = prevFavorites.some(fav => fav.id === item.id);\n      if (isFavorited) {\n        const updatedFavorites = prevFavorites.filter(fav => fav.id !== item.id);\n        setNotification(`\"${item.title}\" removed from favorites`);\n        setTimeout(() => setNotification(''), 3000);\n        return updatedFavorites;\n      } else {\n        const newFavorite = {\n          id: item.id,\n          title: item.title,\n          thumbnail: item.thumbnail,\n          description: item.description,\n          language: item.language,\n          genres: item.genres || []\n        };\n        setNotification(`\"${item.title}\" added to favorites`);\n        setTimeout(() => setNotification(''), 3000);\n        return [...prevFavorites, newFavorite];\n      }\n    });\n  };\n  const fetchPosterForMovie = async (movieTitle, movieId, year = null) => {\n    try {\n      const response = await fetch('http://localhost:5000/movie', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          title: movieTitle\n        })\n      });\n      if (!response.ok) {\n        throw new Error(`HTTP error: ${response.status}`);\n      }\n      const data = await response.json();\n      if (data.poster && data.poster !== 'https://via.placeholder.com/200x300') {\n        return data.poster;\n      }\n      return 'https://via.placeholder.com/200x300';\n    } catch (err) {\n      console.error(`Error fetching poster for \"${movieTitle}\":`, err);\n      return 'https://via.placeholder.com/200x300';\n    }\n  };\n  const fetchRecommendations = async (movieTitle, language, genres = []) => {\n    setLoading(true);\n    setError(null);\n    try {\n      const response = await fetch('http://localhost:5000/recommend', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          movie_title: movieTitle\n        })\n      });\n      const data = await response.json();\n      if (response.ok && Array.isArray(data) && data.length > 0) {\n        const mappedRecommendations = data.slice(0, 5).map((rec, i) => ({\n          id: rec.id || i + 100,\n          title: rec.title,\n          thumbnail: rec.poster || 'https://via.placeholder.com/200x300',\n          description: `Language: ${rec.original_language || language || 'en'}, Genres: ${rec.genres || 'N/A'}`,\n          language: rec.original_language || language || 'en',\n          genres: rec.genres ? rec.genres.split(' ') : genres\n        }));\n        setRecommendations(prev => ({\n          ...prev,\n          [movieTitle]: mappedRecommendations\n        }));\n      } else {\n        setRecommendations(prev => ({\n          ...prev,\n          [movieTitle]: []\n        }));\n      }\n    } catch (err) {\n      setError(`Failed to fetch recommendations for \"${movieTitle}\": ${err.message}`);\n      setRecommendations(prev => ({\n        ...prev,\n        [movieTitle]: []\n      }));\n    } finally {\n      setLoading(false);\n    }\n  };\n  useEffect(() => {\n    const fetchInitialData = async () => {\n      setLoading(true);\n      try {\n        const updatedRows = JSON.parse(JSON.stringify(initialRowsData));\n        for (const row of updatedRows) {\n          for (const item of row.items) {\n            if (!item.thumbnail) {\n              item.thumbnail = await fetchPosterForMovie(item.title, item.id);\n            }\n          }\n        }\n        setInitialRows(updatedRows);\n        if (featuredItem.language === 'te' && !recommendations[featuredItem.title]) {\n          await fetchRecommendations(featuredItem.title, featuredItem.language, featuredItem.genres);\n        }\n      } catch (err) {\n        setError('Failed to fetch initial data');\n      } finally {\n        setLoading(false);\n      }\n    };\n    fetchInitialData();\n  }, [recommendations]);\n  const handleMoreInfo = item => {\n    const updatedItem = {\n      ...item\n    };\n    setSelectedItem(updatedItem);\n    fetchRecommendations(item.title, item.language, item.genres);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"home\",\n    children: [/*#__PURE__*/_jsxDEV(Header, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 192,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Hero, {\n      item: {\n        ...featuredItem,\n        thumbnail: featuredItem.thumbnail || 'https://via.placeholder.com/200x300'\n      },\n      onMoreInfo: handleMoreInfo,\n      favorites: favorites,\n      toggleFavorite: toggleFavorite\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 193,\n      columnNumber: 7\n    }, this), initialRows.map((row, index) => /*#__PURE__*/_jsxDEV(Row, {\n      title: row.title,\n      items: row.items,\n      onMoreInfo: handleMoreInfo,\n      favorites: favorites,\n      toggleFavorite: toggleFavorite\n    }, index, false, {\n      fileName: _jsxFileName,\n      lineNumber: 200,\n      columnNumber: 9\n    }, this)), Object.entries(recommendations).map(([title, recs]) => recs.length > 0 && /*#__PURE__*/_jsxDEV(Row, {\n      title: `Recommendations for ${title}`,\n      items: recs,\n      onMoreInfo: handleMoreInfo,\n      favorites: favorites,\n      toggleFavorite: toggleFavorite\n    }, `rec-${title}`, false, {\n      fileName: _jsxFileName,\n      lineNumber: 211,\n      columnNumber: 11\n    }, this)), loading && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"loading\",\n      children: \"Loading...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 221,\n      columnNumber: 19\n    }, this), error && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"error\",\n      children: [error, /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => setError(null),\n        children: \"Dismiss\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 225,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 223,\n      columnNumber: 9\n    }, this), notification && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"notification\",\n      children: notification\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 228,\n      columnNumber: 24\n    }, this), selectedItem && /*#__PURE__*/_jsxDEV(Modal, {\n      item: selectedItem,\n      onClose: () => setSelectedItem(null)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 229,\n      columnNumber: 24\n    }, this), /*#__PURE__*/_jsxDEV(Footer, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 230,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 191,\n    columnNumber: 5\n  }, this);\n}\n_s(Home, \"1Axs3r/Ft2zsxY00vdhS+ggaLV0=\");\n_c = Home;\nexport default Home;\nvar _c;\n$RefreshReg$(_c, \"Home\");","map":{"version":3,"names":["React","useState","useEffect","Header","Hero","Row","Modal","Footer","jsxDEV","_jsxDEV","Home","_s","selectedItem","setSelectedItem","recommendations","setRecommendations","saved","sessionStorage","getItem","JSON","parse","initialRows","setInitialRows","loading","setLoading","error","setError","favorites","setFavorites","localStorage","notification","setNotification","featuredItem","id","title","description","thumbnail","video","language","genres","initialRowsData","items","handleBeforeUnload","removeItem","window","addEventListener","removeEventListener","scrollTo","setItem","stringify","toggleFavorite","item","prevFavorites","isFavorited","some","fav","updatedFavorites","filter","setTimeout","newFavorite","fetchPosterForMovie","movieTitle","movieId","year","response","fetch","method","headers","body","ok","Error","status","data","json","poster","err","console","fetchRecommendations","movie_title","Array","isArray","length","mappedRecommendations","slice","map","rec","i","original_language","split","prev","message","fetchInitialData","updatedRows","row","handleMoreInfo","updatedItem","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onMoreInfo","index","Object","entries","recs","onClick","onClose","_c","$RefreshReg$"],"sources":["C:/Users/Rajkamal/Desktop/movie_recommender/frontend/src/pages/Home.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport Header from '../components/Header';\r\nimport Hero from '../components/Hero';\r\nimport Row from '../components/Row';\r\nimport Modal from '../components/Modal';\r\nimport Footer from '../components/Footer';\r\nimport './Home.css';\r\n\r\nfunction Home() {\r\n  const [selectedItem, setSelectedItem] = useState(null);\r\n  const [recommendations, setRecommendations] = useState(() => {\r\n    const saved = sessionStorage.getItem('recommendations');\r\n    return saved ? JSON.parse(saved) : {};\r\n  });\r\n  const [initialRows, setInitialRows] = useState([]);\r\n  const [loading, setLoading] = useState(false);\r\n  const [error, setError] = useState(null);\r\n  const [favorites, setFavorites] = useState(() =>\r\n    JSON.parse(localStorage.getItem('myList') || '[]')\r\n  );\r\n  const [notification, setNotification] = useState('');\r\n\r\n  // Featured item for Baahubali: The Beginning\r\n  const featuredItem = {\r\n    id: 301344,\r\n    title: 'Baahubali: The Beginning',\r\n    description: 'A Telugu epic about valor and sacrifice.',\r\n    thumbnail: null, // Will be fetched dynamically\r\n    video: '/videos/bb2.mp4',\r\n    language: 'te',\r\n    genres: ['Action', 'Period', 'Epic'],\r\n  };\r\n\r\n  // Trending Telugu movies aligned with backend\r\n  const initialRowsData = [\r\n    {\r\n      title: 'Trending Movies',\r\n      items: [\r\n        { id: 900352, title: 'Kalki 2898 AD', thumbnail: null, description: 'A futuristic film inspired by Hindu mythology.', language: 'te', genres: ['Sci-Fi', 'Mythology', 'Action'] },\r\n        { id: 934632, title: 'Salaar: Part 1 â€“ Ceasefire', thumbnail: null, description: 'An action-packed saga of power and betrayal.', language: 'te', genres: ['Action', 'Drama', 'Epic'] },\r\n        { id: 614933, title: 'RRR', thumbnail: null, description: 'A revolutionary tale of friendship and rebellion.', language: 'te', genres: ['Action', 'Historical', 'Drama', 'Epic'] },\r\n        { id: 614934, title: 'Pushpa 2: The Rule', thumbnail: null, description: 'A gripping sequel to the smuggling saga.', language: 'te', genres: ['Action', 'Drama'] },\r\n        { id: 1121402, title: 'Hi Nanna', thumbnail: null, description: 'A heartwarming family drama.', language: 'te', genres: ['Romance', 'Drama'] },\r\n        { id: 1080802, title: 'Saripodhaa Sanivaaram', thumbnail: null, description: 'An intense vigilante story.', language: 'te', genres: ['Action', 'Thriller', 'Vigilante'] },\r\n        { id: 614932, title: 'Saaho', thumbnail: null, description: 'A high-octane action thriller.', language: 'te', genres: ['Action', 'Thriller'] },\r\n      ],\r\n    },\r\n    {\r\n      title: 'Watch It Again',\r\n      items: [\r\n        { id: 5, title: 'Inception', thumbnail: null, description: 'A mind-bending heist movie.', language: 'en', genres: ['Sci-Fi', 'Thriller'] },\r\n        { id: 6, title: 'Titanic', thumbnail: null, description: 'A romantic disaster film.', language: 'en', genres: ['Romance', 'Drama'] },\r\n      ],\r\n    },\r\n  ];\r\n\r\n  // Clear recommendations from sessionStorage on page unload\r\n  useEffect(() => {\r\n    const handleBeforeUnload = () => {\r\n      sessionStorage.removeItem('recommendations');\r\n    };\r\n    window.addEventListener('beforeunload', handleBeforeUnload);\r\n    return () => window.removeEventListener('beforeunload', handleBeforeUnload);\r\n  }, []);\r\n\r\n  // Save favorites to localStorage\r\n  useEffect(() => {\r\n    window.scrollTo(0, 0);\r\n    localStorage.setItem('myList', JSON.stringify(favorites));\r\n  }, [favorites]);\r\n\r\n  // Save recommendations to sessionStorage\r\n  useEffect(() => {\r\n    sessionStorage.setItem('recommendations', JSON.stringify(recommendations));\r\n  }, [recommendations]);\r\n\r\n  const toggleFavorite = (item) => {\r\n    if (!item.id || !item.title) {\r\n      setError('Invalid movie item');\r\n      return;\r\n    }\r\n    setFavorites((prevFavorites) => {\r\n      const isFavorited = prevFavorites.some((fav) => fav.id === item.id);\r\n      if (isFavorited) {\r\n        const updatedFavorites = prevFavorites.filter((fav) => fav.id !== item.id);\r\n        setNotification(`\"${item.title}\" removed from favorites`);\r\n        setTimeout(() => setNotification(''), 3000);\r\n        return updatedFavorites;\r\n      } else {\r\n        const newFavorite = {\r\n          id: item.id,\r\n          title: item.title,\r\n          thumbnail: item.thumbnail,\r\n          description: item.description,\r\n          language: item.language,\r\n          genres: item.genres || [],\r\n        };\r\n        setNotification(`\"${item.title}\" added to favorites`);\r\n        setTimeout(() => setNotification(''), 3000);\r\n        return [...prevFavorites, newFavorite];\r\n      }\r\n    });\r\n  };\r\n\r\n  const fetchPosterForMovie = async (movieTitle, movieId, year = null) => {\r\n    try {\r\n      const response = await fetch('http://localhost:5000/movie', {\r\n        method: 'POST',\r\n        headers: { 'Content-Type': 'application/json' },\r\n        body: JSON.stringify({ title: movieTitle }),\r\n      });\r\n      if (!response.ok) {\r\n        throw new Error(`HTTP error: ${response.status}`);\r\n      }\r\n      const data = await response.json();\r\n      if (data.poster && data.poster !== 'https://via.placeholder.com/200x300') {\r\n        return data.poster;\r\n      }\r\n      return 'https://via.placeholder.com/200x300';\r\n    } catch (err) {\r\n      console.error(`Error fetching poster for \"${movieTitle}\":`, err);\r\n      return 'https://via.placeholder.com/200x300';\r\n    }\r\n  };\r\n\r\n  const fetchRecommendations = async (movieTitle, language, genres = []) => {\r\n    setLoading(true);\r\n    setError(null);\r\n    try {\r\n      const response = await fetch('http://localhost:5000/recommend', {\r\n        method: 'POST',\r\n        headers: { 'Content-Type': 'application/json' },\r\n        body: JSON.stringify({ movie_title: movieTitle }),\r\n      });\r\n      const data = await response.json();\r\n      if (response.ok && Array.isArray(data) && data.length > 0) {\r\n        const mappedRecommendations = data.slice(0, 5).map((rec, i) => ({\r\n          id: rec.id || i + 100,\r\n          title: rec.title,\r\n          thumbnail: rec.poster || 'https://via.placeholder.com/200x300',\r\n          description: `Language: ${rec.original_language || language || 'en'}, Genres: ${rec.genres || 'N/A'}`,\r\n          language: rec.original_language || language || 'en',\r\n          genres: rec.genres ? rec.genres.split(' ') : genres,\r\n        }));\r\n        setRecommendations((prev) => ({ ...prev, [movieTitle]: mappedRecommendations }));\r\n      } else {\r\n        setRecommendations((prev) => ({ ...prev, [movieTitle]: [] }));\r\n      }\r\n    } catch (err) {\r\n      setError(`Failed to fetch recommendations for \"${movieTitle}\": ${err.message}`);\r\n      setRecommendations((prev) => ({ ...prev, [movieTitle]: [] }));\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    const fetchInitialData = async () => {\r\n      setLoading(true);\r\n      try {\r\n        const updatedRows = JSON.parse(JSON.stringify(initialRowsData));\r\n        for (const row of updatedRows) {\r\n          for (const item of row.items) {\r\n            if (!item.thumbnail) {\r\n              item.thumbnail = await fetchPosterForMovie(item.title, item.id);\r\n            }\r\n          }\r\n        }\r\n        setInitialRows(updatedRows);\r\n\r\n        if (featuredItem.language === 'te' && !recommendations[featuredItem.title]) {\r\n          await fetchRecommendations(featuredItem.title, featuredItem.language, featuredItem.genres);\r\n        }\r\n      } catch (err) {\r\n        setError('Failed to fetch initial data');\r\n      } finally {\r\n        setLoading(false);\r\n      }\r\n    };\r\n\r\n    fetchInitialData();\r\n  }, [recommendations]);\r\n\r\n  const handleMoreInfo = (item) => {\r\n    const updatedItem = { ...item };\r\n    setSelectedItem(updatedItem);\r\n    fetchRecommendations(item.title, item.language, item.genres);\r\n  };\r\n\r\n  return (\r\n    <div className=\"home\">\r\n      <Header />\r\n      <Hero\r\n        item={{ ...featuredItem, thumbnail: featuredItem.thumbnail || 'https://via.placeholder.com/200x300' }}\r\n        onMoreInfo={handleMoreInfo}\r\n        favorites={favorites}\r\n        toggleFavorite={toggleFavorite}\r\n      />\r\n      {initialRows.map((row, index) => (\r\n        <Row\r\n          key={index}\r\n          title={row.title}\r\n          items={row.items}\r\n          onMoreInfo={handleMoreInfo}\r\n          favorites={favorites}\r\n          toggleFavorite={toggleFavorite}\r\n        />\r\n      ))}\r\n      {Object.entries(recommendations).map(([title, recs]) => (\r\n        recs.length > 0 && (\r\n          <Row\r\n            key={`rec-${title}`}\r\n            title={`Recommendations for ${title}`}\r\n            items={recs}\r\n            onMoreInfo={handleMoreInfo}\r\n            favorites={favorites}\r\n            toggleFavorite={toggleFavorite}\r\n          />\r\n        )\r\n      ))}\r\n      {loading && <div className=\"loading\">Loading...</div>}\r\n      {error && (\r\n        <div className=\"error\">\r\n          {error}\r\n          <button onClick={() => setError(null)}>Dismiss</button>\r\n        </div>\r\n      )}\r\n      {notification && <div className=\"notification\">{notification}</div>}\r\n      {selectedItem && <Modal item={selectedItem} onClose={() => setSelectedItem(null)} />}\r\n      <Footer />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Home;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}