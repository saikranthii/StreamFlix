{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Rajkamal\\\\Desktop\\\\movie_recommender\\\\frontend\\\\src\\\\pages\\\\Home.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport Header from '../components/Header';\nimport Hero from '../components/Hero';\nimport Row from '../components/Row';\nimport Modal from '../components/Modal';\nimport Footer from '../components/Footer';\nimport './Home.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Home() {\n  _s();\n  const [selectedItem, setSelectedItem] = useState(null);\n  const [recommendations, setRecommendations] = useState({});\n  const [initialRows, setInitialRows] = useState([]);\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState(null);\n  const [favorites, setFavorites] = useState(() => JSON.parse(localStorage.getItem('myList') || '[]'));\n  const [notification, setNotification] = useState('');\n  const blackPoster = \"https://via.placeholder.com/200x300?text=No+Poster\";\n  const staticMovies = [\"Chaava\", \"Mad2\", \"Saripoda Sanivaaram\"];\n  const featuredItem = {\n    id: 271726,\n    title: \"Baahubali: The Beginning\",\n    description: \"A Telugu epic about valor and sacrifice.\",\n    thumbnail: blackPoster,\n    language: \"te\"\n  };\n  const initialRowsData = [{\n    title: \"Trending Movies\",\n    items: [{\n      id: 900352,\n      title: \"Kalki 2898 AD\",\n      thumbnail: blackPoster,\n      description: \"A sci-fi epic set in a dystopian future.\",\n      language: \"te\"\n    }, {\n      id: 934632,\n      title: \"Salaar\",\n      thumbnail: blackPoster,\n      description: \"An action-packed saga of power and betrayal.\",\n      language: \"te\"\n    }, {\n      id: 0,\n      title: \"Chaava\",\n      thumbnail: blackPoster,\n      description: \"A historical drama about bravery.\",\n      isStatic: true,\n      language: \"te\"\n    }, {\n      id: 614933,\n      title: \"RRR\",\n      thumbnail: blackPoster,\n      description: \"A revolutionary tale of friendship and rebellion.\",\n      language: \"te\"\n    }, {\n      id: 614934,\n      title: \"Pushpa 2: The Rule\",\n      thumbnail: blackPoster,\n      description: \"A gripping sequel to the smuggling saga.\",\n      language: \"te\"\n    }, {\n      id: 1121402,\n      title: \"Hi Nanna\",\n      thumbnail: blackPoster,\n      description: \"A heartwarming family drama.\",\n      language: \"te\"\n    }, {\n      id: 1,\n      title: \"Mad2\",\n      thumbnail: blackPoster,\n      description: \"A thrilling continuation of mystery.\",\n      isStatic: true,\n      language: \"te\"\n    }, {\n      id: 297282,\n      title: \"Court\",\n      thumbnail: blackPoster,\n      description: \"A thought-provoking legal drama.\",\n      language: \"te\"\n    }, {\n      id: 1560,\n      title: \"Return of the Dragon\",\n      thumbnail: blackPoster,\n      description: \"A classic martial arts adventure.\",\n      language: \"te\"\n    }, {\n      id: 614932,\n      title: \"Saaho\",\n      thumbnail: blackPoster,\n      description: \"A high-octane action thriller.\",\n      language: \"te\"\n    }, {\n      id: 2,\n      title: \"Saripoda Sanivaaram\",\n      thumbnail: blackPoster,\n      description: \"An intense vigilante story.\",\n      isStatic: true,\n      language: \"te\"\n    }]\n  }, {\n    title: \"Watch It Again\",\n    items: [{\n      id: 5,\n      title: \"Inception\",\n      thumbnail: blackPoster,\n      description: \"A mind-bending heist movie.\",\n      language: \"en\"\n    }, {\n      id: 6,\n      title: \"Titanic\",\n      thumbnail: blackPoster,\n      description: \"A romantic disaster film.\",\n      language: \"en\"\n    }]\n  }];\n  useEffect(() => {\n    window.scrollTo(0, 0);\n    localStorage.setItem('myList', JSON.stringify(favorites));\n    console.log('Favorites saved to localStorage:', favorites);\n  }, [favorites]);\n  const toggleFavorite = item => {\n    setFavorites(prevFavorites => {\n      const isFavorited = prevFavorites.some(fav => fav.id === item.id);\n      if (isFavorited) {\n        console.log('Removing from favorites:', item.title);\n        const updatedFavorites = prevFavorites.filter(fav => fav.id !== item.id);\n        setNotification(`\"${item.title}\" removed from favorites`);\n        setTimeout(() => setNotification(''), 3000);\n        return updatedFavorites;\n      } else {\n        setNotification(`\"${item.title}\" added to favorites`);\n        setTimeout(() => setNotification(''), 3000);\n        console.log('Adding to favorites:', item.title);\n        return [...prevFavorites, item];\n      }\n    });\n  };\n  const fetchMovieData = async (title, isStatic = false) => {\n    if (isStatic) {\n      const localPoster = `http://localhost:5000/static/${title.replace(' ', '_').toLowerCase()}.jpg`;\n      try {\n        const response = await fetch(localPoster, {\n          method: 'HEAD'\n        });\n        if (response.ok) {\n          console.log(`Using local poster for static movie \"${title}\": ${localPoster}`);\n          return localPoster;\n        }\n      } catch (err) {\n        console.warn(`Local poster not found for static movie \"${title}\": ${err}`);\n      }\n    }\n    try {\n      console.log(`Fetching movie data for \"${title}\"...`);\n      const response = await fetch('http://localhost:5000/movie', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          title\n        })\n      });\n      if (!response.ok) {\n        console.warn(`Failed to fetch movie data for \"${title}\": ${response.status}`);\n        return null;\n      }\n      const data = await response.json();\n      if (data.error) {\n        console.warn(`Movie \"${title}\" not found in database`);\n        return null;\n      }\n      console.log(`Fetched movie data for \"${title}\":`, data);\n      return {\n        id: data.id,\n        title: data.title,\n        thumbnail: data.poster || blackPoster,\n        description: `Language: ${data.original_language || 'N/A'}, Genres: ${data.genres || 'N/A'}`,\n        language: data.original_language || 'te'\n      };\n    } catch (err) {\n      console.error(`Error fetching movie data for \"${title}\":`, err);\n      return null;\n    }\n  };\n  const fetchRecommendations = async (movieTitle, numMovies = 5, isTelugu = false) => {\n    setLoading(true);\n    setError(null);\n    try {\n      const endpoint = isTelugu ? '/random-telugu' : '/recommend';\n      const options = isTelugu ? {\n        method: 'GET',\n        headers: {\n          'Content-Type': 'application/json'\n        }\n      } : {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          movie_title: movieTitle\n        })\n      };\n      console.log(`Fetching ${numMovies} recommendations for \"${movieTitle}\" via ${endpoint}...`);\n      const response = await fetch(`http://localhost:5000${endpoint}`, options);\n      if (!response.ok) {\n        throw new Error(`HTTP error! status: ${response.status}, statusText: ${response.statusText}`);\n      }\n      const data = await response.json();\n      console.log(`Received ${data.length} recommendations for \"${movieTitle}\":`, data);\n      const uniqueData = Array.from(new Map(data.map(item => [item.title.toLowerCase(), item])).values());\n      console.log(`After removing duplicates, ${uniqueData.length} unique recommendations for \"${movieTitle}\":`, uniqueData);\n      const selectedRecommendations = uniqueData.slice(0, numMovies).map((rec, i) => ({\n        id: rec.id || i + 200,\n        title: rec.title,\n        thumbnail: rec.poster || blackPoster,\n        description: `Language: ${rec.original_language || (isTelugu ? 'te' : 'en')}, Genres: ${rec.genres || 'N/A'}`,\n        language: rec.original_language || (isTelugu ? 'te' : 'en')\n      }));\n      setRecommendations(prev => ({\n        ...prev,\n        [movieTitle]: selectedRecommendations\n      }));\n    } catch (err) {\n      console.error(`Error fetching recommendations for \"${movieTitle}\":`, err);\n      setError(`Network error fetching recommendations: ${err.message}`);\n      setRecommendations(prev => ({\n        ...prev,\n        [movieTitle]: []\n      }));\n    } finally {\n      setLoading(false);\n    }\n  };\n  useEffect(() => {\n    const fetchInitialData = async () => {\n      setLoading(true);\n      try {\n        const updatedRows = JSON.parse(JSON.stringify(initialRowsData));\n        for (const row of updatedRows) {\n          for (const item of row.items) {\n            const isStatic = item.isStatic && staticMovies.includes(item.title);\n            const movieData = await fetchMovieData(item.title, isStatic);\n            if (movieData) {\n              item.id = movieData.id;\n              item.thumbnail = movieData.thumbnail;\n              item.description = movieData.description;\n              item.language = movieData.language;\n            } else if (isStatic) {\n              item.thumbnail = `http://localhost:5000/static/${item.title.replace(' ', '_').toLowerCase()}.jpg`;\n            }\n          }\n        }\n        const featuredData = await fetchMovieData(featuredItem.title);\n        if (featuredData) {\n          featuredItem.id = featuredData.id;\n          featuredItem.thumbnail = featuredData.thumbnail;\n          featuredItem.description = featuredData.description;\n          featuredItem.language = featuredData.language;\n        }\n        setInitialRows(updatedRows);\n        await fetchRecommendations(featuredItem.title, 5, featuredItem.language === 'te');\n      } catch (err) {\n        setError('Failed to fetch initial data');\n        console.error('Initial fetch error:', err);\n      } finally {\n        setLoading(false);\n      }\n    };\n    fetchInitialData();\n  }, []);\n  const handleMoreInfo = item => {\n    const updatedItem = {\n      ...item\n    };\n    if (item.isStatic && staticMovies.includes(item.title)) {\n      updatedItem.thumbnail = `http://localhost:5000/static/${item.title.replace(' ', '_').toLowerCase()}.jpg`;\n    }\n    setSelectedItem(updatedItem);\n    fetchRecommendations(item.title, 5, item.language === 'te');\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"home\",\n    children: [/*#__PURE__*/_jsxDEV(Header, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 213,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Hero, {\n      item: featuredItem,\n      onMoreInfo: handleMoreInfo,\n      favorites: favorites || [],\n      toggleFavorite: toggleFavorite\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 214,\n      columnNumber: 7\n    }, this), (initialRows.length > 0 ? initialRows : initialRowsData).map((row, index) => /*#__PURE__*/_jsxDEV(Row, {\n      title: row.title,\n      items: row.items,\n      onMoreInfo: handleMoreInfo,\n      favorites: favorites || [],\n      toggleFavorite: toggleFavorite\n    }, index, false, {\n      fileName: _jsxFileName,\n      lineNumber: 221,\n      columnNumber: 9\n    }, this)), Object.entries(recommendations).map(([title, recs]) => /*#__PURE__*/_jsxDEV(Row, {\n      title: `Recommendations for ${title}`,\n      items: recs,\n      onMoreInfo: handleMoreInfo,\n      favorites: favorites || [],\n      toggleFavorite: toggleFavorite\n    }, `rec-${title}`, false, {\n      fileName: _jsxFileName,\n      lineNumber: 231,\n      columnNumber: 9\n    }, this)), !Object.keys(recommendations).length && !loading && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"no-recommendations\",\n      children: \"No recommendations loaded yet.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 241,\n      columnNumber: 9\n    }, this), loading && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"loading\",\n      children: \"Loading...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 243,\n      columnNumber: 19\n    }, this), error && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"error\",\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 244,\n      columnNumber: 17\n    }, this), selectedItem && /*#__PURE__*/_jsxDEV(Modal, {\n      item: selectedItem,\n      onClose: () => setSelectedItem(null)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 245,\n      columnNumber: 24\n    }, this), notification && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"notification\",\n      children: notification\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 246,\n      columnNumber: 24\n    }, this), /*#__PURE__*/_jsxDEV(Footer, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 247,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 212,\n    columnNumber: 5\n  }, this);\n}\n_s(Home, \"S2Hei3njckYK+XvAmANMcJbb7vc=\");\n_c = Home;\nexport default Home;\nvar _c;\n$RefreshReg$(_c, \"Home\");","map":{"version":3,"names":["React","useState","useEffect","Header","Hero","Row","Modal","Footer","jsxDEV","_jsxDEV","Home","_s","selectedItem","setSelectedItem","recommendations","setRecommendations","initialRows","setInitialRows","loading","setLoading","error","setError","favorites","setFavorites","JSON","parse","localStorage","getItem","notification","setNotification","blackPoster","staticMovies","featuredItem","id","title","description","thumbnail","language","initialRowsData","items","isStatic","window","scrollTo","setItem","stringify","console","log","toggleFavorite","item","prevFavorites","isFavorited","some","fav","updatedFavorites","filter","setTimeout","fetchMovieData","localPoster","replace","toLowerCase","response","fetch","method","ok","err","warn","headers","body","status","data","json","poster","original_language","genres","fetchRecommendations","movieTitle","numMovies","isTelugu","endpoint","options","movie_title","Error","statusText","length","uniqueData","Array","from","Map","map","values","selectedRecommendations","slice","rec","i","prev","message","fetchInitialData","updatedRows","row","includes","movieData","featuredData","handleMoreInfo","updatedItem","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onMoreInfo","index","Object","entries","recs","keys","onClose","_c","$RefreshReg$"],"sources":["C:/Users/Rajkamal/Desktop/movie_recommender/frontend/src/pages/Home.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport Header from '../components/Header';\r\nimport Hero from '../components/Hero';\r\nimport Row from '../components/Row';\r\nimport Modal from '../components/Modal';\r\nimport Footer from '../components/Footer';\r\nimport './Home.css';\r\n\r\nfunction Home() {\r\n  const [selectedItem, setSelectedItem] = useState(null);\r\n  const [recommendations, setRecommendations] = useState({});\r\n  const [initialRows, setInitialRows] = useState([]);\r\n  const [loading, setLoading] = useState(false);\r\n  const [error, setError] = useState(null);\r\n  const [favorites, setFavorites] = useState(() => JSON.parse(localStorage.getItem('myList') || '[]'));\r\n  const [notification, setNotification] = useState('');\r\n\r\n  const blackPoster = \"https://via.placeholder.com/200x300?text=No+Poster\";\r\n\r\n  const staticMovies = [\"Chaava\", \"Mad2\", \"Saripoda Sanivaaram\"];\r\n\r\n  const featuredItem = {\r\n    id: 271726,\r\n    title: \"Baahubali: The Beginning\",\r\n    description: \"A Telugu epic about valor and sacrifice.\",\r\n    thumbnail: blackPoster,\r\n    language: \"te\"\r\n  };\r\n\r\n  const initialRowsData = [\r\n    {\r\n      title: \"Trending Movies\",\r\n      items: [\r\n        { id: 900352, title: \"Kalki 2898 AD\", thumbnail: blackPoster, description: \"A sci-fi epic set in a dystopian future.\", language: \"te\" },\r\n        { id: 934632, title: \"Salaar\", thumbnail: blackPoster, description: \"An action-packed saga of power and betrayal.\", language: \"te\" },\r\n        { id: 0, title: \"Chaava\", thumbnail: blackPoster, description: \"A historical drama about bravery.\", isStatic: true, language: \"te\" },\r\n        { id: 614933, title: \"RRR\", thumbnail: blackPoster, description: \"A revolutionary tale of friendship and rebellion.\", language: \"te\" },\r\n        { id: 614934, title: \"Pushpa 2: The Rule\", thumbnail: blackPoster, description: \"A gripping sequel to the smuggling saga.\", language: \"te\" },\r\n        { id: 1121402, title: \"Hi Nanna\", thumbnail: blackPoster, description: \"A heartwarming family drama.\", language: \"te\" },\r\n        { id: 1, title: \"Mad2\", thumbnail: blackPoster, description: \"A thrilling continuation of mystery.\", isStatic: true, language: \"te\" },\r\n        { id: 297282, title: \"Court\", thumbnail: blackPoster, description: \"A thought-provoking legal drama.\", language: \"te\" },\r\n        { id: 1560, title: \"Return of the Dragon\", thumbnail: blackPoster, description: \"A classic martial arts adventure.\", language: \"te\" },\r\n        { id: 614932, title: \"Saaho\", thumbnail: blackPoster, description: \"A high-octane action thriller.\", language: \"te\" },\r\n        { id: 2, title: \"Saripoda Sanivaaram\", thumbnail: blackPoster, description: \"An intense vigilante story.\", isStatic: true, language: \"te\" },\r\n      ],\r\n    },\r\n    {\r\n      title: \"Watch It Again\",\r\n      items: [\r\n        { id: 5, title: \"Inception\", thumbnail: blackPoster, description: \"A mind-bending heist movie.\", language: \"en\" },\r\n        { id: 6, title: \"Titanic\", thumbnail: blackPoster, description: \"A romantic disaster film.\", language: \"en\" },\r\n      ],\r\n    },\r\n  ];\r\n\r\n  useEffect(() => {\r\n    window.scrollTo(0, 0);\r\n    localStorage.setItem('myList', JSON.stringify(favorites));\r\n    console.log('Favorites saved to localStorage:', favorites);\r\n  }, [favorites]);\r\n\r\n  const toggleFavorite = (item) => {\r\n    setFavorites((prevFavorites) => {\r\n      const isFavorited = prevFavorites.some((fav) => fav.id === item.id);\r\n      if (isFavorited) {\r\n        console.log('Removing from favorites:', item.title);\r\n        const updatedFavorites = prevFavorites.filter((fav) => fav.id !== item.id);\r\n        setNotification(`\"${item.title}\" removed from favorites`);\r\n        setTimeout(() => setNotification(''), 3000);\r\n        return updatedFavorites;\r\n      } else {\r\n        setNotification(`\"${item.title}\" added to favorites`);\r\n        setTimeout(() => setNotification(''), 3000);\r\n        console.log('Adding to favorites:', item.title);\r\n        return [...prevFavorites, item];\r\n      }\r\n    });\r\n  };\r\n\r\n  const fetchMovieData = async (title, isStatic = false) => {\r\n    if (isStatic) {\r\n      const localPoster = `http://localhost:5000/static/${title.replace(' ', '_').toLowerCase()}.jpg`;\r\n      try {\r\n        const response = await fetch(localPoster, { method: 'HEAD' });\r\n        if (response.ok) {\r\n          console.log(`Using local poster for static movie \"${title}\": ${localPoster}`);\r\n          return localPoster;\r\n        }\r\n      } catch (err) {\r\n        console.warn(`Local poster not found for static movie \"${title}\": ${err}`);\r\n      }\r\n    }\r\n    try {\r\n      console.log(`Fetching movie data for \"${title}\"...`);\r\n      const response = await fetch('http://localhost:5000/movie', {\r\n        method: 'POST',\r\n        headers: { 'Content-Type': 'application/json' },\r\n        body: JSON.stringify({ title })\r\n      });\r\n      if (!response.ok) {\r\n        console.warn(`Failed to fetch movie data for \"${title}\": ${response.status}`);\r\n        return null;\r\n      }\r\n      const data = await response.json();\r\n      if (data.error) {\r\n        console.warn(`Movie \"${title}\" not found in database`);\r\n        return null;\r\n      }\r\n      console.log(`Fetched movie data for \"${title}\":`, data);\r\n      return {\r\n        id: data.id,\r\n        title: data.title,\r\n        thumbnail: data.poster || blackPoster,\r\n        description: `Language: ${data.original_language || 'N/A'}, Genres: ${data.genres || 'N/A'}`,\r\n        language: data.original_language || 'te'\r\n      };\r\n    } catch (err) {\r\n      console.error(`Error fetching movie data for \"${title}\":`, err);\r\n      return null;\r\n    }\r\n  };\r\n\r\n  const fetchRecommendations = async (movieTitle, numMovies = 5, isTelugu = false) => {\r\n    setLoading(true);\r\n    setError(null);\r\n    try {\r\n      const endpoint = isTelugu ? '/random-telugu' : '/recommend';\r\n      const options = isTelugu\r\n        ? { method: 'GET', headers: { 'Content-Type': 'application/json' } }\r\n        : {\r\n            method: 'POST',\r\n            headers: { 'Content-Type': 'application/json' },\r\n            body: JSON.stringify({ movie_title: movieTitle })\r\n          };\r\n      console.log(`Fetching ${numMovies} recommendations for \"${movieTitle}\" via ${endpoint}...`);\r\n      const response = await fetch(`http://localhost:5000${endpoint}`, options);\r\n      if (!response.ok) {\r\n        throw new Error(`HTTP error! status: ${response.status}, statusText: ${response.statusText}`);\r\n      }\r\n      const data = await response.json();\r\n      console.log(`Received ${data.length} recommendations for \"${movieTitle}\":`, data);\r\n      const uniqueData = Array.from(new Map(data.map(item => [item.title.toLowerCase(), item])).values());\r\n      console.log(`After removing duplicates, ${uniqueData.length} unique recommendations for \"${movieTitle}\":`, uniqueData);\r\n      const selectedRecommendations = uniqueData.slice(0, numMovies).map((rec, i) => ({\r\n        id: rec.id || i + 200,\r\n        title: rec.title,\r\n        thumbnail: rec.poster || blackPoster,\r\n        description: `Language: ${rec.original_language || (isTelugu ? 'te' : 'en')}, Genres: ${rec.genres || 'N/A'}`,\r\n        language: rec.original_language || (isTelugu ? 'te' : 'en')\r\n      }));\r\n      setRecommendations((prev) => ({ ...prev, [movieTitle]: selectedRecommendations }));\r\n    } catch (err) {\r\n      console.error(`Error fetching recommendations for \"${movieTitle}\":`, err);\r\n      setError(`Network error fetching recommendations: ${err.message}`);\r\n      setRecommendations((prev) => ({ ...prev, [movieTitle]: [] }));\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    const fetchInitialData = async () => {\r\n      setLoading(true);\r\n      try {\r\n        const updatedRows = JSON.parse(JSON.stringify(initialRowsData));\r\n        for (const row of updatedRows) {\r\n          for (const item of row.items) {\r\n            const isStatic = item.isStatic && staticMovies.includes(item.title);\r\n            const movieData = await fetchMovieData(item.title, isStatic);\r\n            if (movieData) {\r\n              item.id = movieData.id;\r\n              item.thumbnail = movieData.thumbnail;\r\n              item.description = movieData.description;\r\n              item.language = movieData.language;\r\n            } else if (isStatic) {\r\n              item.thumbnail = `http://localhost:5000/static/${item.title.replace(' ', '_').toLowerCase()}.jpg`;\r\n            }\r\n          }\r\n        }\r\n\r\n        const featuredData = await fetchMovieData(featuredItem.title);\r\n        if (featuredData) {\r\n          featuredItem.id = featuredData.id;\r\n          featuredItem.thumbnail = featuredData.thumbnail;\r\n          featuredItem.description = featuredData.description;\r\n          featuredItem.language = featuredData.language;\r\n        }\r\n\r\n        setInitialRows(updatedRows);\r\n\r\n        await fetchRecommendations(featuredItem.title, 5, featuredItem.language === 'te');\r\n      } catch (err) {\r\n        setError('Failed to fetch initial data');\r\n        console.error('Initial fetch error:', err);\r\n      } finally {\r\n        setLoading(false);\r\n      }\r\n    };\r\n    fetchInitialData();\r\n  }, []);\r\n\r\n  const handleMoreInfo = (item) => {\r\n    const updatedItem = { ...item };\r\n    if (item.isStatic && staticMovies.includes(item.title)) {\r\n      updatedItem.thumbnail = `http://localhost:5000/static/${item.title.replace(' ', '_').toLowerCase()}.jpg`;\r\n    }\r\n    setSelectedItem(updatedItem);\r\n    fetchRecommendations(item.title, 5, item.language === 'te');\r\n  };\r\n\r\n  return (\r\n    <div className=\"home\">\r\n      <Header />\r\n      <Hero\r\n        item={featuredItem}\r\n        onMoreInfo={handleMoreInfo}\r\n        favorites={favorites || []}\r\n        toggleFavorite={toggleFavorite}\r\n      />\r\n      {(initialRows.length > 0 ? initialRows : initialRowsData).map((row, index) => (\r\n        <Row\r\n          key={index}\r\n          title={row.title}\r\n          items={row.items}\r\n          onMoreInfo={handleMoreInfo}\r\n          favorites={favorites || []}\r\n          toggleFavorite={toggleFavorite}\r\n        />\r\n      ))}\r\n      {Object.entries(recommendations).map(([title, recs]) => (\r\n        <Row\r\n          key={`rec-${title}`}\r\n          title={`Recommendations for ${title}`}\r\n          items={recs}\r\n          onMoreInfo={handleMoreInfo}\r\n          favorites={favorites || []}\r\n          toggleFavorite={toggleFavorite}\r\n        />\r\n      ))}\r\n      {!Object.keys(recommendations).length && !loading && (\r\n        <div className=\"no-recommendations\">No recommendations loaded yet.</div>\r\n      )}\r\n      {loading && <div className=\"loading\">Loading...</div>}\r\n      {error && <div className=\"error\">{error}</div>}\r\n      {selectedItem && <Modal item={selectedItem} onClose={() => setSelectedItem(null)} />}\r\n      {notification && <div className=\"notification\">{notification}</div>}\r\n      <Footer />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Home;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}