{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Rajkamal\\\\Desktop\\\\movie_recommender\\\\frontend\\\\src\\\\pages\\\\AdChoices.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport Footer from '../components/Footer';\nimport './AdChoices.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction AdChoices() {\n  _s();\n  const [settings, setSettings] = useState({\n    personalizedAds: true,\n    interestBasedAds: true,\n    locationBasedAds: false,\n    adFrequencyCapping: true,\n    adDataSharing: false\n  });\n  const [error, setError] = useState('');\n  useEffect(() => {\n    window.scrollTo(0, 0); // Scroll to top on load\n\n    // Simulate fetching settings from backend or fallback static values\n    const fetchSettings = async () => {\n      try {\n        // Uncomment when backend is ready\n        // const response = await axios.get('http://localhost:5001/api/ad-preferences');\n        // setSettings(response.data);\n\n        // For static fallback demo:\n        setSettings({\n          personalizedAds: true,\n          interestBasedAds: true,\n          locationBasedAds: false,\n          adFrequencyCapping: true,\n          adDataSharing: false\n        });\n      } catch (err) {\n        setError('Failed to load preferences.');\n      }\n    };\n    fetchSettings();\n  }, []);\n\n  // Toggle one setting by key\n  const handleToggle = key => {\n    const newSettings = {\n      ...settings,\n      [key]: !settings[key]\n    };\n    setSettings(newSettings);\n    // Here you could post to backend to save preferences\n    // e.g. axios.post('/api/ad-preferences', newSettings)\n    localStorage.setItem('adSettings', JSON.stringify(newSettings));\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"ad-choices\",\n    children: [/*#__PURE__*/_jsxDEV(\"main\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Ad Choices\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Manage your advertising preferences below:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 9\n      }, this), error && /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"error\",\n        children: error\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 19\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"settings-wrapper\",\n        children: Object.entries(settings).map(([key, value]) => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"setting\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: key,\n            children: key.replace(/([A-Z])/g, ' $1') // add space before capitals\n            .replace(/^./, str => str.toUpperCase())\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 58,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            id: key,\n            type: \"checkbox\",\n            checked: value,\n            onChange: () => handleToggle(key)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 63,\n            columnNumber: 15\n          }, this)]\n        }, key, true, {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Footer, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 50,\n    columnNumber: 5\n  }, this);\n}\n_s(AdChoices, \"F6eA//ZL8hKnmSxup47DKUZddCo=\");\n_c = AdChoices;\nexport default AdChoices;\nvar _c;\n$RefreshReg$(_c, \"AdChoices\");","map":{"version":3,"names":["React","useState","useEffect","Footer","jsxDEV","_jsxDEV","AdChoices","_s","settings","setSettings","personalizedAds","interestBasedAds","locationBasedAds","adFrequencyCapping","adDataSharing","error","setError","window","scrollTo","fetchSettings","err","handleToggle","key","newSettings","localStorage","setItem","JSON","stringify","className","children","fileName","_jsxFileName","lineNumber","columnNumber","Object","entries","map","value","htmlFor","replace","str","toUpperCase","id","type","checked","onChange","_c","$RefreshReg$"],"sources":["C:/Users/Rajkamal/Desktop/movie_recommender/frontend/src/pages/AdChoices.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport Footer from '../components/Footer';\r\nimport './AdChoices.css';\r\n\r\nfunction AdChoices() {\r\n  const [settings, setSettings] = useState({\r\n    personalizedAds: true,\r\n    interestBasedAds: true,\r\n    locationBasedAds: false,\r\n    adFrequencyCapping: true,\r\n    adDataSharing: false,\r\n  });\r\n  const [error, setError] = useState('');\r\n\r\n  useEffect(() => {\r\n    window.scrollTo(0, 0); // Scroll to top on load\r\n\r\n    // Simulate fetching settings from backend or fallback static values\r\n    const fetchSettings = async () => {\r\n      try {\r\n        // Uncomment when backend is ready\r\n        // const response = await axios.get('http://localhost:5001/api/ad-preferences');\r\n        // setSettings(response.data);\r\n        \r\n        // For static fallback demo:\r\n        setSettings({\r\n          personalizedAds: true,\r\n          interestBasedAds: true,\r\n          locationBasedAds: false,\r\n          adFrequencyCapping: true,\r\n          adDataSharing: false,\r\n        });\r\n      } catch (err) {\r\n        setError('Failed to load preferences.');\r\n      }\r\n    };\r\n    fetchSettings();\r\n  }, []);\r\n\r\n  // Toggle one setting by key\r\n  const handleToggle = (key) => {\r\n    const newSettings = { ...settings, [key]: !settings[key] };\r\n    setSettings(newSettings);\r\n    // Here you could post to backend to save preferences\r\n    // e.g. axios.post('/api/ad-preferences', newSettings)\r\n    localStorage.setItem('adSettings', JSON.stringify(newSettings));\r\n  };\r\n\r\n  return (\r\n    <div className=\"ad-choices\">\r\n      <main>\r\n        <h1>Ad Choices</h1>\r\n        <p>Manage your advertising preferences below:</p>\r\n        {error && <p className=\"error\">{error}</p>}\r\n        <div className=\"settings-wrapper\">\r\n          {Object.entries(settings).map(([key, value]) => (\r\n            <div className=\"setting\" key={key}>\r\n              <label htmlFor={key}>\r\n                {key\r\n                  .replace(/([A-Z])/g, ' $1') // add space before capitals\r\n                  .replace(/^./, (str) => str.toUpperCase())}\r\n              </label>\r\n              <input\r\n                id={key}\r\n                type=\"checkbox\"\r\n                checked={value}\r\n                onChange={() => handleToggle(key)}\r\n              />\r\n            </div>\r\n          ))}\r\n        </div>\r\n      </main>\r\n      <Footer />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default AdChoices;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}