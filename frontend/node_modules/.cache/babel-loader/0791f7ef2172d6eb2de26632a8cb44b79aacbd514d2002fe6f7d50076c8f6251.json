{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Rajkamal\\\\Desktop\\\\movie_recommender\\\\frontend\\\\src\\\\pages\\\\Home.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport Header from '../components/Header';\nimport Hero from '../components/Hero';\nimport Row from '../components/Row';\nimport Modal from '../components/Modal';\nimport Footer from '../components/Footer';\nimport './Home.css';\n\n// Local posters (case-sensitive)\nimport kalkiPoster from '../data/Kalki.jpg';\nimport salaarPoster from '../data/salaar.jpg';\nimport chaavaPoster from '../data/chaava.jpg';\nimport rrrPoster from '../data/rrr.jpg';\nimport pushpa2Poster from '../data/pushpa2.jpg';\nimport hiNannaPoster from '../data/hinanna.jpg';\nimport mad2Poster from '../data/mad2.jpg';\nimport courtPoster from '../data/court.jpg';\nimport dragonPoster from '../data/rod.jpg';\nimport saripodaPoster from '../data/ss.jpg';\nimport saahoPoster from '../data/saaho.jpg';\nimport baahubaliPoster from '../data/bb2.jpg';\nimport blackPoster from '../data/black.jpg';\n\n// In-memory poster cache\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst posterCache = new Map();\nconst placeholderPoster = 'https://via.placeholder.com/200x300?text=Poster';\nfunction Home() {\n  _s();\n  const [selectedItem, setSelectedItem] = useState(null);\n  const [recommendations, setRecommendations] = useState({});\n  const [initialRows, setInitialRows] = useState([]);\n  const [loading, setLoading] = useState(false);\n  const [favorites, setFavorites] = useState(() => JSON.parse(localStorage.getItem('myList') || '[]'));\n  const [error, setError] = useState(null);\n  const staticMoviesWithLocalPosters = {\n    'Chaava': chaavaPoster,\n    'Mad2': mad2Poster,\n    'Saripodhaa Sanivaaram': saripodaPoster,\n    'Saaho': saahoPoster,\n    'Baahubali 2: The Conclusion': baahubaliPoster,\n    'Kalki 2898 AD': kalkiPoster,\n    'Salaar: Part 1 – Ceasefire': salaarPoster,\n    'RRR': rrrPoster,\n    'Pushpa 2: The Rule': pushpa2Poster,\n    'Hi Nanna': hiNannaPoster,\n    'Court': courtPoster,\n    'Return of the Dragon': dragonPoster\n  };\n  const featuredItem = {\n    id: 301344,\n    title: 'Baahubali: The Beginning',\n    description: 'A Telugu epic about valor and sacrifice.',\n    thumbnail: 'https://image.tmdb.org/t/p/w500/9gm3lL8n3dZA9EKGTHZdt16qMKD.jpg',\n    language: 'te'\n  };\n  const initialRowsData = [{\n    title: 'Trending Movies',\n    items: [{\n      id: 900352,\n      title: 'Kalki 2898 AD',\n      thumbnail: kalkiPoster,\n      description: 'Futuristic mythology.',\n      language: 'te',\n      isStatic: true\n    }, {\n      id: 934632,\n      title: 'Salaar: Part 1 – Ceasefire',\n      thumbnail: salaarPoster,\n      description: 'Action saga.',\n      language: 'te',\n      isStatic: true\n    }, {\n      id: 0,\n      title: 'Chaava',\n      thumbnail: chaavaPoster,\n      description: 'Historical drama.',\n      language: 'hi',\n      isStatic: true\n    }, {\n      id: 614933,\n      title: 'RRR',\n      thumbnail: rrrPoster,\n      description: 'Revolutionary tale.',\n      language: 'te',\n      isStatic: true\n    }, {\n      id: 614934,\n      title: 'Pushpa 2: The Rule',\n      thumbnail: pushpa2Poster,\n      description: 'Smuggling sequel.',\n      language: 'te',\n      isStatic: true\n    }, {\n      id: 1121402,\n      title: 'Hi Nanna',\n      thumbnail: hiNannaPoster,\n      description: 'Family drama.',\n      language: 'te',\n      isStatic: true\n    }, {\n      id: 1,\n      title: 'Mad2',\n      thumbnail: mad2Poster,\n      description: 'Thrilling mystery.',\n      language: 'te',\n      isStatic: true\n    }, {\n      id: 297282,\n      title: 'Court',\n      thumbnail: courtPoster,\n      description: 'Legal drama.',\n      language: 'mr',\n      isStatic: true\n    }, {\n      id: 1560,\n      title: 'Return of the Dragon',\n      thumbnail: dragonPoster,\n      description: 'Martial arts.',\n      language: 'en',\n      isStatic: true\n    }, {\n      id: 614932,\n      title: 'Saaho',\n      thumbnail: saahoPoster,\n      description: 'Action thriller.',\n      language: 'te',\n      isStatic: true\n    }, {\n      id: 2,\n      title: 'Saripodhaa Sanivaaram',\n      thumbnail: saripodaPoster,\n      description: 'Vigilante story.',\n      language: 'te',\n      isStatic: true\n    }, {\n      id: 301345,\n      title: 'Baahubali 2: The Conclusion',\n      thumbnail: baahubaliPoster,\n      description: 'Epic conclusion.',\n      language: 'te',\n      isStatic: true\n    }]\n  }, {\n    title: 'Watch It Again',\n    items: [{\n      id: 27205,\n      title: 'Inception',\n      thumbnail: blackPoster,\n      description: 'Mind-bending heist.',\n      language: 'en',\n      isStatic: false\n    }, {\n      id: 19995,\n      title: 'Avatar',\n      thumbnail: blackPoster,\n      description: 'Sci-fi epic.',\n      language: 'en',\n      isStatic: false\n    }]\n  }];\n  useEffect(() => {\n    localStorage.setItem('myList', JSON.stringify(favorites));\n  }, [favorites]);\n  const toggleFavorite = item => {\n    setFavorites(prev => {\n      const isFavorited = prev.some(fav => fav.id === item.id);\n      return isFavorited ? prev.filter(fav => fav.id !== item.id) : [...prev, item];\n    });\n  };\n  const fetchRecommendations = async (movieTitle, isTelugu = false) => {\n    if (recommendations[movieTitle]) return;\n    setLoading(true);\n    try {\n      const endpoint = isTelugu ? 'random-telugu' : 'recommend';\n      const response = await fetch(`http://localhost:5000/${endpoint}`, {\n        method: endpoint === 'recommend' ? 'POST' : 'GET',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: endpoint === 'recommend' ? JSON.stringify({\n          movie_title: movieTitle\n        }) : undefined\n      });\n      if (!response.ok) {\n        throw new Error(`HTTP error: ${response.status}`);\n      }\n      const data = await response.json();\n      if (!Array.isArray(data)) {\n        throw new Error('Invalid response format');\n      }\n      const recs = data.slice(0, 5).map((rec, i) => ({\n        id: rec.id || i + 100,\n        title: rec.title || 'Unknown',\n        thumbnail: rec.poster || placeholderPoster,\n        description: `Language: ${rec.original_language || 'en'}`,\n        language: rec.original_language || 'en',\n        isStatic: false\n      }));\n      setRecommendations(prev => ({\n        ...prev,\n        [movieTitle]: recs\n      }));\n    } catch (err) {\n      console.error(`Error fetching recommendations for \"${movieTitle}\":`, err);\n      setError(`Failed to load recommendations for ${movieTitle}`);\n    } finally {\n      setLoading(false);\n    }\n  };\n  const fetchPoster = async movieTitle => {\n    if (staticMoviesWithLocalPosters[movieTitle]) {\n      return staticMoviesWithLocalPosters[movieTitle];\n    }\n    if (posterCache.has(movieTitle)) {\n      return posterCache.get(movieTitle);\n    }\n    try {\n      var _data$;\n      const response = await fetch('http://localhost:5000/recommend', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          movie_title: movieTitle\n        })\n      });\n      if (!response.ok) {\n        throw new Error(`HTTP error: ${response.status}`);\n      }\n      const data = await response.json();\n      const poster = ((_data$ = data[0]) === null || _data$ === void 0 ? void 0 : _data$.poster) || placeholderPoster;\n      posterCache.set(movieTitle, poster);\n      return poster;\n    } catch (err) {\n      console.error(`Error fetching poster for \"${movieTitle}\":`, err);\n      posterCache.set(movieTitle, placeholderPoster);\n      return placeholderPoster;\n    }\n  };\n  useEffect(() => {\n    const init = async () => {\n      setLoading(true);\n      try {\n        const updatedRows = JSON.parse(JSON.stringify(initialRowsData));\n        for (const row of updatedRows) {\n          if (row.title === 'Watch It Again') {\n            for (const item of row.items) {\n              if (!item.isStatic) {\n                item.thumbnail = await fetchPoster(item.title);\n              }\n            }\n          }\n        }\n        await fetchRecommendations(featuredItem.title, true);\n        setInitialRows(updatedRows); // Set as array of row objects\n      } catch (err) {\n        console.error('Error initializing rows:', err);\n        setError('Failed to initialize movie rows');\n      } finally {\n        setLoading(false);\n      }\n    };\n    init();\n  }, []);\n  const handleMoreInfo = item => {\n    const updatedItem = {\n      ...item,\n      thumbnail: item.isStatic ? staticMoviesWithLocalPosters[item.title] || placeholderPoster : item.thumbnail\n    };\n    setSelectedItem(updatedItem);\n    fetchRecommendations(item.title, item.language === 'te');\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"home\",\n    children: [/*#__PURE__*/_jsxDEV(Header, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 195,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Hero, {\n      item: featuredItem,\n      onMoreInfo: handleMoreInfo,\n      favorites: favorites,\n      toggleFavorite: toggleFavorite\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 196,\n      columnNumber: 7\n    }, this), error && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"error\",\n      style: {\n        color: 'red',\n        textAlign: 'center'\n      },\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 197,\n      columnNumber: 17\n    }, this), initialRows.map((row, index) => /*#__PURE__*/_jsxDEV(Row, {\n      title: row.title,\n      items: row.items,\n      onMoreInfo: handleMoreInfo,\n      favorites: favorites,\n      toggleFavorite: toggleFavorite\n    }, `row-${index}`, false, {\n      fileName: _jsxFileName,\n      lineNumber: 199,\n      columnNumber: 9\n    }, this)), Object.entries(recommendations).map(([title, recs], index) => /*#__PURE__*/_jsxDEV(Row, {\n      title: `Because you watched ${title}`,\n      items: recs,\n      onMoreInfo: handleMoreInfo,\n      favorites: favorites,\n      toggleFavorite: toggleFavorite\n    }, `rec-row-${index}`, false, {\n      fileName: _jsxFileName,\n      lineNumber: 209,\n      columnNumber: 9\n    }, this)), loading && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"loading\",\n      style: {\n        textAlign: 'center'\n      },\n      children: \"Loading...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 218,\n      columnNumber: 19\n    }, this), selectedItem && /*#__PURE__*/_jsxDEV(Modal, {\n      item: selectedItem,\n      onClose: () => setSelectedItem(null)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 219,\n      columnNumber: 24\n    }, this), /*#__PURE__*/_jsxDEV(Footer, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 220,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 194,\n    columnNumber: 5\n  }, this);\n}\n_s(Home, \"VzP1HeCAa12YZc6qE73xeujGHbg=\");\n_c = Home;\nexport default Home;\nvar _c;\n$RefreshReg$(_c, \"Home\");","map":{"version":3,"names":["React","useState","useEffect","Header","Hero","Row","Modal","Footer","kalkiPoster","salaarPoster","chaavaPoster","rrrPoster","pushpa2Poster","hiNannaPoster","mad2Poster","courtPoster","dragonPoster","saripodaPoster","saahoPoster","baahubaliPoster","blackPoster","jsxDEV","_jsxDEV","posterCache","Map","placeholderPoster","Home","_s","selectedItem","setSelectedItem","recommendations","setRecommendations","initialRows","setInitialRows","loading","setLoading","favorites","setFavorites","JSON","parse","localStorage","getItem","error","setError","staticMoviesWithLocalPosters","featuredItem","id","title","description","thumbnail","language","initialRowsData","items","isStatic","setItem","stringify","toggleFavorite","item","prev","isFavorited","some","fav","filter","fetchRecommendations","movieTitle","isTelugu","endpoint","response","fetch","method","headers","body","movie_title","undefined","ok","Error","status","data","json","Array","isArray","recs","slice","map","rec","i","poster","original_language","err","console","fetchPoster","has","get","_data$","set","init","updatedRows","row","handleMoreInfo","updatedItem","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onMoreInfo","style","color","textAlign","index","Object","entries","onClose","_c","$RefreshReg$"],"sources":["C:/Users/Rajkamal/Desktop/movie_recommender/frontend/src/pages/Home.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport Header from '../components/Header';\r\nimport Hero from '../components/Hero';\r\nimport Row from '../components/Row';\r\nimport Modal from '../components/Modal';\r\nimport Footer from '../components/Footer';\r\nimport './Home.css';\r\n\r\n// Local posters (case-sensitive)\r\nimport kalkiPoster from '../data/Kalki.jpg';\r\nimport salaarPoster from '../data/salaar.jpg';\r\nimport chaavaPoster from '../data/chaava.jpg';\r\nimport rrrPoster from '../data/rrr.jpg';\r\nimport pushpa2Poster from '../data/pushpa2.jpg';\r\nimport hiNannaPoster from '../data/hinanna.jpg';\r\nimport mad2Poster from '../data/mad2.jpg';\r\nimport courtPoster from '../data/court.jpg';\r\nimport dragonPoster from '../data/rod.jpg';\r\nimport saripodaPoster from '../data/ss.jpg';\r\nimport saahoPoster from '../data/saaho.jpg';\r\nimport baahubaliPoster from '../data/bb2.jpg';\r\nimport blackPoster from '../data/black.jpg';\r\n\r\n// In-memory poster cache\r\nconst posterCache = new Map();\r\nconst placeholderPoster = 'https://via.placeholder.com/200x300?text=Poster';\r\n\r\nfunction Home() {\r\n  const [selectedItem, setSelectedItem] = useState(null);\r\n  const [recommendations, setRecommendations] = useState({});\r\n  const [initialRows, setInitialRows] = useState([]);\r\n  const [loading, setLoading] = useState(false);\r\n  const [favorites, setFavorites] = useState(() => JSON.parse(localStorage.getItem('myList') || '[]'));\r\n  const [error, setError] = useState(null);\r\n\r\n  const staticMoviesWithLocalPosters = {\r\n    'Chaava': chaavaPoster,\r\n    'Mad2': mad2Poster,\r\n    'Saripodhaa Sanivaaram': saripodaPoster,\r\n    'Saaho': saahoPoster,\r\n    'Baahubali 2: The Conclusion': baahubaliPoster,\r\n    'Kalki 2898 AD': kalkiPoster,\r\n    'Salaar: Part 1 – Ceasefire': salaarPoster,\r\n    'RRR': rrrPoster,\r\n    'Pushpa 2: The Rule': pushpa2Poster,\r\n    'Hi Nanna': hiNannaPoster,\r\n    'Court': courtPoster,\r\n    'Return of the Dragon': dragonPoster\r\n  };\r\n\r\n  const featuredItem = {\r\n    id: 301344,\r\n    title: 'Baahubali: The Beginning',\r\n    description: 'A Telugu epic about valor and sacrifice.',\r\n    thumbnail: 'https://image.tmdb.org/t/p/w500/9gm3lL8n3dZA9EKGTHZdt16qMKD.jpg',\r\n    language: 'te'\r\n  };\r\n\r\n  const initialRowsData = [\r\n    {\r\n      title: 'Trending Movies',\r\n      items: [\r\n        { id: 900352, title: 'Kalki 2898 AD', thumbnail: kalkiPoster, description: 'Futuristic mythology.', language: 'te', isStatic: true },\r\n        { id: 934632, title: 'Salaar: Part 1 – Ceasefire', thumbnail: salaarPoster, description: 'Action saga.', language: 'te', isStatic: true },\r\n        { id: 0, title: 'Chaava', thumbnail: chaavaPoster, description: 'Historical drama.', language: 'hi', isStatic: true },\r\n        { id: 614933, title: 'RRR', thumbnail: rrrPoster, description: 'Revolutionary tale.', language: 'te', isStatic: true },\r\n        { id: 614934, title: 'Pushpa 2: The Rule', thumbnail: pushpa2Poster, description: 'Smuggling sequel.', language: 'te', isStatic: true },\r\n        { id: 1121402, title: 'Hi Nanna', thumbnail: hiNannaPoster, description: 'Family drama.', language: 'te', isStatic: true },\r\n        { id: 1, title: 'Mad2', thumbnail: mad2Poster, description: 'Thrilling mystery.', language: 'te', isStatic: true },\r\n        { id: 297282, title: 'Court', thumbnail: courtPoster, description: 'Legal drama.', language: 'mr', isStatic: true },\r\n        { id: 1560, title: 'Return of the Dragon', thumbnail: dragonPoster, description: 'Martial arts.', language: 'en', isStatic: true },\r\n        { id: 614932, title: 'Saaho', thumbnail: saahoPoster, description: 'Action thriller.', language: 'te', isStatic: true },\r\n        { id: 2, title: 'Saripodhaa Sanivaaram', thumbnail: saripodaPoster, description: 'Vigilante story.', language: 'te', isStatic: true },\r\n        { id: 301345, title: 'Baahubali 2: The Conclusion', thumbnail: baahubaliPoster, description: 'Epic conclusion.', language: 'te', isStatic: true }\r\n      ]\r\n    },\r\n    {\r\n      title: 'Watch It Again',\r\n      items: [\r\n        { id: 27205, title: 'Inception', thumbnail: blackPoster, description: 'Mind-bending heist.', language: 'en', isStatic: false },\r\n        { id: 19995, title: 'Avatar', thumbnail: blackPoster, description: 'Sci-fi epic.', language: 'en', isStatic: false }\r\n      ]\r\n    }\r\n  ];\r\n\r\n  useEffect(() => {\r\n    localStorage.setItem('myList', JSON.stringify(favorites));\r\n  }, [favorites]);\r\n\r\n  const toggleFavorite = (item) => {\r\n    setFavorites((prev) => {\r\n      const isFavorited = prev.some((fav) => fav.id === item.id);\r\n      return isFavorited ? prev.filter((fav) => fav.id !== item.id) : [...prev, item];\r\n    });\r\n  };\r\n\r\n  const fetchRecommendations = async (movieTitle, isTelugu = false) => {\r\n    if (recommendations[movieTitle]) return;\r\n    setLoading(true);\r\n    try {\r\n      const endpoint = isTelugu ? 'random-telugu' : 'recommend';\r\n      const response = await fetch(`http://localhost:5000/${endpoint}`, {\r\n        method: endpoint === 'recommend' ? 'POST' : 'GET',\r\n        headers: { 'Content-Type': 'application/json' },\r\n        body: endpoint === 'recommend' ? JSON.stringify({ movie_title: movieTitle }) : undefined\r\n      });\r\n      if (!response.ok) {\r\n        throw new Error(`HTTP error: ${response.status}`);\r\n      }\r\n      const data = await response.json();\r\n      if (!Array.isArray(data)) {\r\n        throw new Error('Invalid response format');\r\n      }\r\n      const recs = data.slice(0, 5).map((rec, i) => ({\r\n        id: rec.id || i + 100,\r\n        title: rec.title || 'Unknown',\r\n        thumbnail: rec.poster || placeholderPoster,\r\n        description: `Language: ${rec.original_language || 'en'}`,\r\n        language: rec.original_language || 'en',\r\n        isStatic: false\r\n      }));\r\n      setRecommendations((prev) => ({ ...prev, [movieTitle]: recs }));\r\n    } catch (err) {\r\n      console.error(`Error fetching recommendations for \"${movieTitle}\":`, err);\r\n      setError(`Failed to load recommendations for ${movieTitle}`);\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  const fetchPoster = async (movieTitle) => {\r\n    if (staticMoviesWithLocalPosters[movieTitle]) {\r\n      return staticMoviesWithLocalPosters[movieTitle];\r\n    }\r\n    if (posterCache.has(movieTitle)) {\r\n      return posterCache.get(movieTitle);\r\n    }\r\n    try {\r\n      const response = await fetch('http://localhost:5000/recommend', {\r\n        method: 'POST',\r\n        headers: { 'Content-Type': 'application/json' },\r\n        body: JSON.stringify({ movie_title: movieTitle })\r\n      });\r\n      if (!response.ok) {\r\n        throw new Error(`HTTP error: ${response.status}`);\r\n      }\r\n      const data = await response.json();\r\n      const poster = data[0]?.poster || placeholderPoster;\r\n      posterCache.set(movieTitle, poster);\r\n      return poster;\r\n    } catch (err) {\r\n      console.error(`Error fetching poster for \"${movieTitle}\":`, err);\r\n      posterCache.set(movieTitle, placeholderPoster);\r\n      return placeholderPoster;\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    const init = async () => {\r\n      setLoading(true);\r\n      try {\r\n        const updatedRows = JSON.parse(JSON.stringify(initialRowsData));\r\n        for (const row of updatedRows) {\r\n          if (row.title === 'Watch It Again') {\r\n            for (const item of row.items) {\r\n              if (!item.isStatic) {\r\n                item.thumbnail = await fetchPoster(item.title);\r\n              }\r\n            }\r\n          }\r\n        }\r\n        await fetchRecommendations(featuredItem.title, true);\r\n        setInitialRows(updatedRows); // Set as array of row objects\r\n      } catch (err) {\r\n        console.error('Error initializing rows:', err);\r\n        setError('Failed to initialize movie rows');\r\n      } finally {\r\n        setLoading(false);\r\n      }\r\n    };\r\n    init();\r\n  }, []);\r\n\r\n  const handleMoreInfo = (item) => {\r\n    const updatedItem = {\r\n      ...item,\r\n      thumbnail: item.isStatic ? staticMoviesWithLocalPosters[item.title] || placeholderPoster : item.thumbnail\r\n    };\r\n    setSelectedItem(updatedItem);\r\n    fetchRecommendations(item.title, item.language === 'te');\r\n  };\r\n\r\n  return (\r\n    <div className=\"home\">\r\n      <Header />\r\n      <Hero item={featuredItem} onMoreInfo={handleMoreInfo} favorites={favorites} toggleFavorite={toggleFavorite} />\r\n      {error && <div className=\"error\" style={{ color: 'red', textAlign: 'center' }}>{error}</div>}\r\n      {initialRows.map((row, index) => (\r\n        <Row\r\n          key={`row-${index}`}\r\n          title={row.title}\r\n          items={row.items}\r\n          onMoreInfo={handleMoreInfo}\r\n          favorites={favorites}\r\n          toggleFavorite={toggleFavorite}\r\n        />\r\n      ))}\r\n      {Object.entries(recommendations).map(([title, recs], index) => (\r\n        <Row\r\n          key={`rec-row-${index}`}\r\n          title={`Because you watched ${title}`}\r\n          items={recs}\r\n          onMoreInfo={handleMoreInfo}\r\n          favorites={favorites}\r\n          toggleFavorite={toggleFavorite}\r\n        />\r\n      ))}\r\n      {loading && <div className=\"loading\" style={{ textAlign: 'center' }}>Loading...</div>}\r\n      {selectedItem && <Modal item={selectedItem} onClose={() => setSelectedItem(null)} />}\r\n      <Footer />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Home;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}