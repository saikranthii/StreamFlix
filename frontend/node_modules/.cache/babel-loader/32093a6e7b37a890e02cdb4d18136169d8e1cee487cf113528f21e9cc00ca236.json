{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Rajkamal\\\\Desktop\\\\movie_recommender\\\\frontend\\\\src\\\\pages\\\\Search.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport Row from '../components/Row';\nimport Modal from '../components/Modal';\nimport Footer from '../components/Footer';\nimport './Search.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Search() {\n  _s();\n  const [searchTitle, setSearchTitle] = useState('');\n  const [results, setResults] = useState([]);\n  const [selectedItem, setSelectedItem] = useState(null);\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState(null);\n  const fetchWithTimeout = async (url, options, timeout = 10000) => {\n    const controller = new AbortController();\n    const id = setTimeout(() => controller.abort(), timeout);\n    try {\n      const response = await fetch(url, {\n        ...options,\n        signal: controller.signal\n      });\n      clearTimeout(id);\n      return response;\n    } catch (err) {\n      clearTimeout(id);\n      throw err;\n    }\n  };\n  const handleSearch = async () => {\n    if (!searchTitle.trim()) {\n      setError('Please enter a movie title');\n      setResults([]);\n      return;\n    }\n    setLoading(true);\n    setError(null);\n    const maxRetries = 3;\n    let attempt = 0;\n    while (attempt < maxRetries) {\n      try {\n        const response = await fetchWithTimeout('http://localhost:5000/recommend', {\n          method: 'POST',\n          headers: {\n            'Content-Type': 'application/json'\n          },\n          body: JSON.stringify({\n            movie_title: searchTitle\n          })\n        }, 10000);\n        if (!response.ok) {\n          const errorData = await response.json().catch(() => ({}));\n          throw new Error(errorData.error || `HTTP error: ${response.status}`);\n        }\n        const data = await response.json();\n        if (Array.isArray(data) && data.length > 0) {\n          const mappedResults = data.map((rec, i) => ({\n            id: i + 100,\n            title: rec.title || 'Unknown Title',\n            thumbnail: rec.poster || 'https://via.placeholder.com/200x300?text=Poster',\n            description: `Language: ${rec.original_language || 'N/A'}, Genres: ${rec.genres || 'N/A'}`\n          }));\n          setResults(mappedResults);\n        } else {\n          setError(data.error || 'No results found');\n          setResults([]);\n        }\n        break; // Success, exit retry loop\n      } catch (err) {\n        attempt++;\n        if (attempt === maxRetries) {\n          setError(`Network error after ${maxRetries} attempts: ${err.message}`);\n          console.error('Search error:', err);\n          setResults([]);\n        } else {\n          console.warn(`Retry ${attempt}/${maxRetries} for ${searchTitle}`);\n          await new Promise(resolve => setTimeout(resolve, 1000)); // Wait 1s before retry\n        }\n      } finally {\n        if (attempt >= maxRetries) setLoading(false);\n      }\n    }\n    setLoading(false);\n  };\n  const handleMoreInfo = item => {\n    setSelectedItem(item);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"search\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"search-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"search-bar\",\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          value: searchTitle,\n          onChange: e => setSearchTitle(e.target.value),\n          placeholder: \"Search for a movie\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 98,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: handleSearch,\n          children: \"Search\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 104,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 9\n      }, this), loading && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"loading\",\n        children: \"Loading...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 106,\n        columnNumber: 21\n      }, this), error && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"error\",\n        children: error\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 107,\n        columnNumber: 19\n      }, this), results.length > 0 && /*#__PURE__*/_jsxDEV(Row, {\n        title: `Search Results for \"${searchTitle}\"`,\n        items: results,\n        onMoreInfo: handleMoreInfo\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 109,\n        columnNumber: 11\n      }, this), selectedItem && /*#__PURE__*/_jsxDEV(Modal, {\n        item: selectedItem,\n        onClose: () => setSelectedItem(null)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 115,\n        columnNumber: 26\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Footer, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 117,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 95,\n    columnNumber: 5\n  }, this);\n}\n_s(Search, \"0fBOcgb/KkQXonYdNL2CMMGenqY=\");\n_c = Search;\nexport default Search;\nvar _c;\n$RefreshReg$(_c, \"Search\");","map":{"version":3,"names":["React","useState","Row","Modal","Footer","jsxDEV","_jsxDEV","Search","_s","searchTitle","setSearchTitle","results","setResults","selectedItem","setSelectedItem","loading","setLoading","error","setError","fetchWithTimeout","url","options","timeout","controller","AbortController","id","setTimeout","abort","response","fetch","signal","clearTimeout","err","handleSearch","trim","maxRetries","attempt","method","headers","body","JSON","stringify","movie_title","ok","errorData","json","catch","Error","status","data","Array","isArray","length","mappedResults","map","rec","i","title","thumbnail","poster","description","original_language","genres","message","console","warn","Promise","resolve","handleMoreInfo","item","className","children","type","value","onChange","e","target","placeholder","fileName","_jsxFileName","lineNumber","columnNumber","onClick","items","onMoreInfo","onClose","_c","$RefreshReg$"],"sources":["C:/Users/Rajkamal/Desktop/movie_recommender/frontend/src/pages/Search.js"],"sourcesContent":["import React, { useState } from 'react';\r\nimport Row from '../components/Row';\r\nimport Modal from '../components/Modal';\r\nimport Footer from '../components/Footer';\r\nimport './Search.css';\r\n\r\nfunction Search() {\r\n  const [searchTitle, setSearchTitle] = useState('');\r\n  const [results, setResults] = useState([]);\r\n  const [selectedItem, setSelectedItem] = useState(null);\r\n  const [loading, setLoading] = useState(false);\r\n  const [error, setError] = useState(null);\r\n\r\n  const fetchWithTimeout = async (url, options, timeout = 10000) => {\r\n    const controller = new AbortController();\r\n    const id = setTimeout(() => controller.abort(), timeout);\r\n    try {\r\n      const response = await fetch(url, { ...options, signal: controller.signal });\r\n      clearTimeout(id);\r\n      return response;\r\n    } catch (err) {\r\n      clearTimeout(id);\r\n      throw err;\r\n    }\r\n  };\r\n\r\n  const handleSearch = async () => {\r\n    if (!searchTitle.trim()) {\r\n      setError('Please enter a movie title');\r\n      setResults([]);\r\n      return;\r\n    }\r\n\r\n    setLoading(true);\r\n    setError(null);\r\n\r\n    const maxRetries = 3;\r\n    let attempt = 0;\r\n\r\n    while (attempt < maxRetries) {\r\n      try {\r\n        const response = await fetchWithTimeout(\r\n          'http://localhost:5000/recommend',\r\n          {\r\n            method: 'POST',\r\n            headers: { 'Content-Type': 'application/json' },\r\n            body: JSON.stringify({ movie_title: searchTitle }),\r\n          },\r\n          10000\r\n        );\r\n\r\n        if (!response.ok) {\r\n          const errorData = await response.json().catch(() => ({}));\r\n          throw new Error(errorData.error || `HTTP error: ${response.status}`);\r\n        }\r\n\r\n        const data = await response.json();\r\n\r\n        if (Array.isArray(data) && data.length > 0) {\r\n          const mappedResults = data.map((rec, i) => ({\r\n            id: i + 100,\r\n            title: rec.title || 'Unknown Title',\r\n            thumbnail: rec.poster || 'https://via.placeholder.com/200x300?text=Poster',\r\n            description: `Language: ${rec.original_language || 'N/A'}, Genres: ${rec.genres || 'N/A'}`,\r\n          }));\r\n          setResults(mappedResults);\r\n        } else {\r\n          setError(data.error || 'No results found');\r\n          setResults([]);\r\n        }\r\n        break; // Success, exit retry loop\r\n      } catch (err) {\r\n        attempt++;\r\n        if (attempt === maxRetries) {\r\n          setError(`Network error after ${maxRetries} attempts: ${err.message}`);\r\n          console.error('Search error:', err);\r\n          setResults([]);\r\n        } else {\r\n          console.warn(`Retry ${attempt}/${maxRetries} for ${searchTitle}`);\r\n          await new Promise((resolve) => setTimeout(resolve, 1000)); // Wait 1s before retry\r\n        }\r\n      } finally {\r\n        if (attempt >= maxRetries) setLoading(false);\r\n      }\r\n    }\r\n\r\n    setLoading(false);\r\n  };\r\n\r\n  const handleMoreInfo = (item) => {\r\n    setSelectedItem(item);\r\n  };\r\n\r\n  return (\r\n    <div className=\"search\">\r\n      <div className=\"search-container\">\r\n        <div className=\"search-bar\">\r\n          <input\r\n            type=\"text\"\r\n            value={searchTitle}\r\n            onChange={(e) => setSearchTitle(e.target.value)}\r\n            placeholder=\"Search for a movie\"\r\n          />\r\n          <button onClick={handleSearch}>Search</button>\r\n        </div>\r\n        {loading && <div className=\"loading\">Loading...</div>}\r\n        {error && <div className=\"error\">{error}</div>}\r\n        {results.length > 0 && (\r\n          <Row\r\n            title={`Search Results for \"${searchTitle}\"`}\r\n            items={results}\r\n            onMoreInfo={handleMoreInfo}\r\n          />\r\n        )}\r\n        {selectedItem && <Modal item={selectedItem} onClose={() => setSelectedItem(null)} />}\r\n      </div>\r\n      <Footer />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Search;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}