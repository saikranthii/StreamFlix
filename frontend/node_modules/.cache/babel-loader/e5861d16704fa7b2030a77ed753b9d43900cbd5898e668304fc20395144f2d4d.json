{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Rajkamal\\\\Desktop\\\\movie_recommender\\\\frontend\\\\src\\\\pages\\\\MyList.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport Header from '../components/Header';\nimport Row from '../components/Row';\nimport Modal from '../components/Modal';\nimport Footer from '../components/Footer';\nimport './MyList.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction MyList() {\n  _s();\n  const [myList, setMyList] = useState([]);\n  const [selectedItem, setSelectedItem] = useState(null);\n\n  // Update myList whenever localStorage changes\n  useEffect(() => {\n    const savedList = JSON.parse(localStorage.getItem('myList') || '[]');\n    console.log('MyList loaded:', savedList); // Debug log\n    setMyList(savedList);\n\n    // Optional: Listen for storage events to sync across tabs (if needed)\n    const handleStorageChange = e => {\n      if (e.key === 'myList') {\n        setMyList(JSON.parse(e.newValue || '[]'));\n      }\n    };\n    window.addEventListener('storage', handleStorageChange);\n\n    // Cleanup event listener\n    return () => window.removeEventListener('storage', handleStorageChange);\n  }, []);\n  const handleMoreInfo = item => {\n    setSelectedItem(item);\n  };\n  const toggleFavorite = item => {\n    const updatedList = myList.filter(fav => fav.id !== item.id);\n    setMyList(updatedList);\n    localStorage.setItem('myList', JSON.stringify(updatedList));\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"my-list\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"My List\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 7\n    }, this), myList.length > 0 ? /*#__PURE__*/_jsxDEV(Row, {\n      title: \"Your Saved Movies\",\n      items: myList,\n      onMoreInfo: handleMoreInfo,\n      favorites: myList,\n      toggleFavorite: toggleFavorite\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"empty-list\",\n      children: \"Your list is empty. Start adding movies!\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 9\n    }, this), selectedItem && /*#__PURE__*/_jsxDEV(Modal, {\n      item: selectedItem,\n      onClose: () => setSelectedItem(null)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 24\n    }, this), /*#__PURE__*/_jsxDEV(Footer, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 41,\n    columnNumber: 5\n  }, this);\n}\n_s(MyList, \"Da4H4ybhbMLdfYLpq0Rr1msYrP0=\");\n_c = MyList;\nexport default MyList;\nvar _c;\n$RefreshReg$(_c, \"MyList\");","map":{"version":3,"names":["React","useState","useEffect","Header","Row","Modal","Footer","jsxDEV","_jsxDEV","MyList","_s","myList","setMyList","selectedItem","setSelectedItem","savedList","JSON","parse","localStorage","getItem","console","log","handleStorageChange","e","key","newValue","window","addEventListener","removeEventListener","handleMoreInfo","item","toggleFavorite","updatedList","filter","fav","id","setItem","stringify","className","children","fileName","_jsxFileName","lineNumber","columnNumber","length","title","items","onMoreInfo","favorites","onClose","_c","$RefreshReg$"],"sources":["C:/Users/Rajkamal/Desktop/movie_recommender/frontend/src/pages/MyList.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport Header from '../components/Header';\r\nimport Row from '../components/Row';\r\nimport Modal from '../components/Modal';\r\nimport Footer from '../components/Footer';\r\nimport './MyList.css';\r\n\r\nfunction MyList() {\r\n  const [myList, setMyList] = useState([]);\r\n  const [selectedItem, setSelectedItem] = useState(null);\r\n\r\n  // Update myList whenever localStorage changes\r\n  useEffect(() => {\r\n    const savedList = JSON.parse(localStorage.getItem('myList') || '[]');\r\n    console.log('MyList loaded:', savedList); // Debug log\r\n    setMyList(savedList);\r\n\r\n    // Optional: Listen for storage events to sync across tabs (if needed)\r\n    const handleStorageChange = (e) => {\r\n      if (e.key === 'myList') {\r\n        setMyList(JSON.parse(e.newValue || '[]'));\r\n      }\r\n    };\r\n    window.addEventListener('storage', handleStorageChange);\r\n\r\n    // Cleanup event listener\r\n    return () => window.removeEventListener('storage', handleStorageChange);\r\n  }, []);\r\n\r\n  const handleMoreInfo = (item) => {\r\n    setSelectedItem(item);\r\n  };\r\n\r\n  const toggleFavorite = (item) => {\r\n    const updatedList = myList.filter((fav) => fav.id !== item.id);\r\n    setMyList(updatedList);\r\n    localStorage.setItem('myList', JSON.stringify(updatedList));\r\n  };\r\n\r\n  return (\r\n    <div className=\"my-list\">\r\n      {/* <Header /> */}\r\n      <h1>My List</h1>\r\n      {myList.length > 0 ? (\r\n        <Row\r\n          title=\"Your Saved Movies\"\r\n          items={myList}\r\n          onMoreInfo={handleMoreInfo}\r\n          favorites={myList}\r\n          toggleFavorite={toggleFavorite}\r\n        />\r\n      ) : (\r\n        <p className=\"empty-list\">Your list is empty. Start adding movies!</p>\r\n      )}\r\n      {selectedItem && <Modal item={selectedItem} onClose={() => setSelectedItem(null)} />}\r\n      <Footer />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default MyList;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}