{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Rajkamal\\\\Desktop\\\\movie_recommender\\\\frontend\\\\src\\\\components\\\\Tile.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport blackPoster from '../data/black.jpg'; // Import blackPoster as a fallback\nimport './Tile.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Tile({\n  item,\n  onMoreInfo,\n  isFavorited = false,\n  toggleFavorite\n}) {\n  _s();\n  // State to track if the image failed to load\n  const [imageFailed, setImageFailed] = useState(false);\n\n  // Debug: Log the thumbnail value\n  console.log(`Tile for ${item.title}: thumbnail =`, item.thumbnail);\n\n  // Check if the thumbnail is missing or the image failed to load\n  const isBlackPoster = !item.thumbnail || imageFailed;\n\n  // Get the first letter of each word in the title\n  const firstLetters = item.title ? item.title.split(/\\s+/) // Split by whitespace to get words\n  .filter(word => word.length > 0) // Filter out empty strings\n  .map(word => word.charAt(0).toUpperCase()) // Get first letter of each word and uppercase it\n  .join('') // Join the letters together\n  : '';\n\n  // Debug: Log whether this is a black poster and the first letters\n  console.log(`Tile for ${item.title}: isBlackPoster =`, isBlackPoster);\n  console.log(`Tile for ${item.title}: firstLetters =`, firstLetters);\n\n  // Use blackPoster as a fallback if thumbnail is missing\n  const backgroundImage = item.thumbnail || blackPoster;\n\n  // Debug: Log the backgroundImage value\n  console.log(`Tile for ${item.title}: backgroundImage =`, backgroundImage);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: `tile ${isBlackPoster ? 'tile-no-poster' : ''}`,\n    style: {\n      backgroundImage: `url(${backgroundImage})`\n    },\n    role: \"button\",\n    tabIndex: 0,\n    onClick: () => onMoreInfo(item),\n    onKeyPress: e => e.key === 'Enter' && onMoreInfo(item),\n    \"aria-label\": `View details for ${item.title}`,\n    children: [/*#__PURE__*/_jsxDEV(\"img\", {\n      src: item.thumbnail || blackPoster,\n      alt: \"\",\n      style: {\n        display: 'none'\n      },\n      onError: () => {\n        console.log(`Image failed to load for ${item.title}, using blackPoster`);\n        setImageFailed(true);\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 7\n    }, this), isBlackPoster && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"tile-no-poster-content\",\n      children: [/*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"tile-first-letter\",\n        children: firstLetters\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"tile-no-poster-message\",\n        children: \"(oops! no poster found)\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"tile-overlay\",\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"tile-title\",\n        children: item.title\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"tile-buttons\",\n        children: [/*#__PURE__*/_jsxDEV(\"i\", {\n          className: \"fas fa-play tile-btn play\",\n          \"aria-label\": \"Play\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"i\", {\n          className: \"fas fa-info-circle tile-btn info\",\n          \"aria-label\": \"More info\",\n          onClick: e => {\n            e.stopPropagation();\n            onMoreInfo(item);\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: `favorite-button ${isFavorited ? 'favorited' : ''}`,\n          onClick: e => {\n            e.stopPropagation();\n            toggleFavorite(item);\n          },\n          \"aria-label\": isFavorited ? 'Remove from favorites' : 'Add to favorites',\n          children: isFavorited ? '‚ù§Ô∏è' : 'ü§ç'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 35,\n    columnNumber: 5\n  }, this);\n}\n_s(Tile, \"J/DE58sO7UnFuUylWstCz93Av2c=\");\n_c = Tile;\nexport default Tile;\nvar _c;\n$RefreshReg$(_c, \"Tile\");","map":{"version":3,"names":["React","useState","blackPoster","jsxDEV","_jsxDEV","Tile","item","onMoreInfo","isFavorited","toggleFavorite","_s","imageFailed","setImageFailed","console","log","title","thumbnail","isBlackPoster","firstLetters","split","filter","word","length","map","charAt","toUpperCase","join","backgroundImage","className","style","role","tabIndex","onClick","onKeyPress","e","key","children","src","alt","display","onError","fileName","_jsxFileName","lineNumber","columnNumber","stopPropagation","_c","$RefreshReg$"],"sources":["C:/Users/Rajkamal/Desktop/movie_recommender/frontend/src/components/Tile.js"],"sourcesContent":["import React, { useState } from 'react';\r\nimport blackPoster from '../data/black.jpg'; // Import blackPoster as a fallback\r\nimport './Tile.css';\r\n\r\nfunction Tile({ item, onMoreInfo, isFavorited = false, toggleFavorite }) {\r\n  // State to track if the image failed to load\r\n  const [imageFailed, setImageFailed] = useState(false);\r\n\r\n  // Debug: Log the thumbnail value\r\n  console.log(`Tile for ${item.title}: thumbnail =`, item.thumbnail);\r\n\r\n  // Check if the thumbnail is missing or the image failed to load\r\n  const isBlackPoster = !item.thumbnail || imageFailed;\r\n\r\n  // Get the first letter of each word in the title\r\n  const firstLetters = item.title\r\n    ? item.title\r\n        .split(/\\s+/) // Split by whitespace to get words\r\n        .filter(word => word.length > 0) // Filter out empty strings\r\n        .map(word => word.charAt(0).toUpperCase()) // Get first letter of each word and uppercase it\r\n        .join('') // Join the letters together\r\n    : '';\r\n\r\n  // Debug: Log whether this is a black poster and the first letters\r\n  console.log(`Tile for ${item.title}: isBlackPoster =`, isBlackPoster);\r\n  console.log(`Tile for ${item.title}: firstLetters =`, firstLetters);\r\n\r\n  // Use blackPoster as a fallback if thumbnail is missing\r\n  const backgroundImage = item.thumbnail || blackPoster;\r\n\r\n  // Debug: Log the backgroundImage value\r\n  console.log(`Tile for ${item.title}: backgroundImage =`, backgroundImage);\r\n\r\n  return (\r\n    <div\r\n      className={`tile ${isBlackPoster ? 'tile-no-poster' : ''}`}\r\n      style={{ backgroundImage: `url(${backgroundImage})` }}\r\n      role=\"button\"\r\n      tabIndex={0}\r\n      onClick={() => onMoreInfo(item)}\r\n      onKeyPress={(e) => e.key === 'Enter' && onMoreInfo(item)}\r\n      aria-label={`View details for ${item.title}`}\r\n    >\r\n      {/* Hidden img element to detect if the image fails to load */}\r\n      <img\r\n        src={item.thumbnail || blackPoster}\r\n        alt=\"\"\r\n        style={{ display: 'none' }}\r\n        onError={() => {\r\n          console.log(`Image failed to load for ${item.title}, using blackPoster`);\r\n          setImageFailed(true);\r\n        }}\r\n      />\r\n      {isBlackPoster && (\r\n        <div className=\"tile-no-poster-content\">\r\n          <span className=\"tile-first-letter\">{firstLetters}</span>\r\n          <span className=\"tile-no-poster-message\">(oops! no poster found)</span>\r\n        </div>\r\n      )}\r\n      <div className=\"tile-overlay\">\r\n        <p className=\"tile-title\">{item.title}</p>\r\n        <div className=\"tile-buttons\">\r\n          <i className=\"fas fa-play tile-btn play\" aria-label=\"Play\" />\r\n          <i\r\n            className=\"fas fa-info-circle tile-btn info\"\r\n            aria-label=\"More info\"\r\n            onClick={(e) => {\r\n              e.stopPropagation();\r\n              onMoreInfo(item);\r\n            }}\r\n          />\r\n          <button\r\n            className={`favorite-button ${isFavorited ? 'favorited' : ''}`}\r\n            onClick={(e) => {\r\n              e.stopPropagation();\r\n              toggleFavorite(item);\r\n            }}\r\n            aria-label={isFavorited ? 'Remove from favorites' : 'Add to favorites'}\r\n          >\r\n            {isFavorited ? '‚ù§Ô∏è' : 'ü§ç'}\r\n          </button>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Tile;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}