{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Rajkamal\\\\Desktop\\\\movie_recommender\\\\frontend\\\\src\\\\pages\\\\MyList.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport Header from '../components/Header';\nimport Row from '../components/Row';\nimport Modal from '../components/Modal';\nimport Footer from '../components/Footer';\nimport './MyList.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction MyList() {\n  _s();\n  const [myList, setMyList] = useState(() => JSON.parse(localStorage.getItem('myList') || '[]'));\n  const [selectedItem, setSelectedItem] = useState(null);\n  const [notification, setNotification] = useState('');\n  useEffect(() => {\n    console.log('MyList loaded from localStorage:', myList);\n    localStorage.setItem('myList', JSON.stringify(myList));\n  }, [myList]);\n  useEffect(() => {\n    window.scrollTo(0, 0); // Scroll to the top of the page\n    const handleStorageChange = e => {\n      if (e.key === 'myList') {\n        const updatedList = JSON.parse(e.newValue || '[]');\n        console.log('MyList updated from storage event:', updatedList);\n        setMyList(updatedList);\n      }\n    };\n    window.addEventListener('storage', handleStorageChange);\n    return () => window.removeEventListener('storage', handleStorageChange);\n  }, []);\n  const handleMoreInfo = item => {\n    setSelectedItem(item);\n  };\n  const toggleFavorite = item => {\n    const isFavorited = myList.some(fav => fav.id === item.id);\n    if (isFavorited) {\n      const updatedList = myList.filter(fav => fav.id !== item.id);\n      console.log('Removing from MyList:', item.title, 'New list:', updatedList);\n      setMyList(updatedList);\n      setNotification(`\"${item.title}\" removed from favorites`);\n      setTimeout(() => setNotification(''), 3000); // Clear notification after 3 seconds\n    } else {\n      console.log('Item not in MyList, no action taken:', item.title);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"my-list\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"My List\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 7\n    }, this), myList.length > 0 ? /*#__PURE__*/_jsxDEV(Row, {\n      title: \"Your Saved Movies\",\n      items: myList,\n      onMoreInfo: handleMoreInfo,\n      favorites: myList || [] // Default to empty array if undefined\n      ,\n      toggleFavorite: toggleFavorite\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"empty-list\",\n      children: \"Your list is empty. Start adding movies!\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 9\n    }, this), selectedItem && /*#__PURE__*/_jsxDEV(Modal, {\n      item: selectedItem,\n      onClose: () => setSelectedItem(null)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 24\n    }, this), notification && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"notification\",\n      children: notification\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 24\n    }, this), /*#__PURE__*/_jsxDEV(Footer, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 49,\n    columnNumber: 5\n  }, this);\n}\n_s(MyList, \"+AHcNXPRdH2taLO3FwUdSbkC41s=\");\n_c = MyList;\nexport default MyList;\nvar _c;\n$RefreshReg$(_c, \"MyList\");","map":{"version":3,"names":["React","useState","useEffect","Header","Row","Modal","Footer","jsxDEV","_jsxDEV","MyList","_s","myList","setMyList","JSON","parse","localStorage","getItem","selectedItem","setSelectedItem","notification","setNotification","console","log","setItem","stringify","window","scrollTo","handleStorageChange","e","key","updatedList","newValue","addEventListener","removeEventListener","handleMoreInfo","item","toggleFavorite","isFavorited","some","fav","id","filter","title","setTimeout","className","children","fileName","_jsxFileName","lineNumber","columnNumber","length","items","onMoreInfo","favorites","onClose","_c","$RefreshReg$"],"sources":["C:/Users/Rajkamal/Desktop/movie_recommender/frontend/src/pages/MyList.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport Header from '../components/Header';\r\nimport Row from '../components/Row';\r\nimport Modal from '../components/Modal';\r\nimport Footer from '../components/Footer';\r\nimport './MyList.css';\r\n\r\nfunction MyList() {\r\n  const [myList, setMyList] = useState(() => JSON.parse(localStorage.getItem('myList') || '[]'));\r\n  const [selectedItem, setSelectedItem] = useState(null);\r\n  const [notification, setNotification] = useState('');\r\n\r\n  useEffect(() => {\r\n    console.log('MyList loaded from localStorage:', myList);\r\n    localStorage.setItem('myList', JSON.stringify(myList));\r\n  }, [myList]);\r\n\r\n  useEffect(() => {\r\n    window.scrollTo(0, 0); // Scroll to the top of the page\r\n    const handleStorageChange = (e) => {\r\n      if (e.key === 'myList') {\r\n        const updatedList = JSON.parse(e.newValue || '[]');\r\n        console.log('MyList updated from storage event:', updatedList);\r\n        setMyList(updatedList);\r\n      }\r\n    };\r\n    window.addEventListener('storage', handleStorageChange);\r\n    return () => window.removeEventListener('storage', handleStorageChange);\r\n  }, []);\r\n\r\n  const handleMoreInfo = (item) => {\r\n    setSelectedItem(item);\r\n  };\r\n\r\n  const toggleFavorite = (item) => {\r\n    const isFavorited = myList.some((fav) => fav.id === item.id);\r\n    if (isFavorited) {\r\n      const updatedList = myList.filter((fav) => fav.id !== item.id);\r\n      console.log('Removing from MyList:', item.title, 'New list:', updatedList);\r\n      setMyList(updatedList);\r\n      setNotification(`\"${item.title}\" removed from favorites`);\r\n      setTimeout(() => setNotification(''), 3000); // Clear notification after 3 seconds\r\n    } else {\r\n      console.log('Item not in MyList, no action taken:', item.title);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"my-list\">\r\n      {/* <Header /> */}\r\n      <h1>My List</h1>\r\n      {myList.length > 0 ? (\r\n        <Row\r\n          title=\"Your Saved Movies\"\r\n          items={myList}\r\n          onMoreInfo={handleMoreInfo}\r\n          favorites={myList || []} // Default to empty array if undefined\r\n          toggleFavorite={toggleFavorite}\r\n        />\r\n      ) : (\r\n        <p className=\"empty-list\">Your list is empty. Start adding movies!</p>\r\n      )}\r\n      {selectedItem && <Modal item={selectedItem} onClose={() => setSelectedItem(null)} />}\r\n      {notification && <div className=\"notification\">{notification}</div>}\r\n      <Footer />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default MyList;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}